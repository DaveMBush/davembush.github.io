<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://davembush.github.com</id>
    <title>Dave&#39;s Notebook • Posts by &#34;interview&#34; category</title>
    <link href="http://davembush.github.com" />
    <updated>2016-10-11T10:30:00.000Z</updated>
    <category term="project management" />
    <category term="code coverage" />
    <category term="tdd" />
    <category term="unit test" />
    <category term="code" />
    <category term="programming" />
    <category term="angular" />
    <category term="javascript" />
    <category term="performance" />
    <category term="react.js" />
    <category term="agile" />
    <category term="failure" />
    <category term="kanban" />
    <category term="scrum" />
    <category term="interview" />
    <category term="job search" />
    <category term="test driven development" />
    <category term="mvvm" />
    <category term="DRY" />
    <category term="loose coupling" />
    <category term="single responsibility" />
    <category term="c#" />
    <category term="learning" />
    <category term="bug" />
    <category term="ext js" />
    <category term="sencha" />
    <category term="career" />
    <category term="react" />
    <category term="ngrx" />
    <category term="redux" />
    <category term="functional" />
    <category term="reactive" />
    <category term="mvp" />
    <category term="private" />
    <category term="testing" />
    <category term="typescript" />
    <category term="routing" />
    <category term="pointers" />
    <category term="unsafe" />
    <category term="class diagram" />
    <category term="vb.net" />
    <category term="visual studio" />
    <category term="flux" />
    <category term="lazy loading" />
    <category term="scope" />
    <category term="DOM" />
    <category term="ionic" />
    <category term="putty" />
    <category term="ssh" />
    <category term="formgroup" />
    <category term="validation" />
    <category term="angular-cli" />
    <category term="modules" />
    <category term="ngmodule" />
    <category term="observables" />
    <category term="RxJS" />
    <category term="model driven" />
    <category term="reactive forms" />
    <category term="estimating" />
    <category term="story points" />
    <category term="best practices" />
    <category term="design patterns" />
    <category term="architecture" />
    <category term="asp.net" />
    <category term="memory" />
    <category term="angular.js" />
    <category term="iis" />
    <category term="ajax" />
    <category term="json" />
    <category term="controller" />
    <category term="MVC" />
    <category term="view" />
    <category term="404" />
    <category term="application_error" />
    <category term="exceptions" />
    <category term="viewstate" />
    <category term="archietcture" />
    <category term="bll" />
    <category term="dal" />
    <category term="Three Tiered" />
    <category term=".net" />
    <category term="enums" />
    <category term="tutorial" />
    <category term="code quality" />
    <category term="cyclomatic" />
    <category term="halstead" />
    <category term="child component" />
    <category term="CefSharp" />
    <category term="Chromium" />
    <category term="Vista" />
    <category term="VPN" />
    <category term="xp" />
    <category term="get" />
    <category term="properties" />
    <category term="set" />
    <category term="empty" />
    <category term="string" />
    <category term="habits" />
    <category term="application testing" />
    <category term="dependency injection" />
    <category term="debugging" />
    <category term="cms" />
    <category term="dotnetnuke" />
    <category term="WordPress" />
    <category term="authority" />
    <category term="confidence" />
    <category term="datalist" />
    <category term="listview" />
    <category term="comments" />
    <category term="tdd. agile" />
    <category term="bootstrap" />
    <category term="copy &amp;amp; paste" />
    <category term="cross browser" />
    <category term="idisposable" />
    <category term="animation" />
    <category term="css" />
    <category term="html" />
    <category term="debug" />
    <category term="checked" />
    <category term="double" />
    <category term="float" />
    <category term="int" />
    <category term="long" />
    <category term="short" />
    <category term="unchecked" />
    <category term="currency" />
    <category term="decimal" />
    <category term="floating point math" />
    <category term="single" />
    <category term="authentication" />
    <category term="isinrole" />
    <category term="roles" />
    <category term="user" />
    <category term="definition of done" />
    <category term="DoD" />
    <category term="dispose" />
    <category term="finalize" />
    <category term="suppressfinalize" />
    <category term="education" />
    <category term="client side" />
    <category term="development" />
    <category term="class" />
    <category term="dynamic classing" />
    <category term="gridview" />
    <category term="college" />
    <category term="freshman" />
    <category term="babel" />
    <category term="es2015" />
    <category term="es6" />
    <category term="jest" />
    <category term="bdd" />
    <category term="Single Responsibility" />
    <category term="Architecture" />
    <category term="full stack developer" />
    <category term="web development" />
    <category term="formsauthentication" />
    <category term="manual" />
    <category term="redirectfromloginpage" />
    <category term="setauthcookie" />
    <category term="NgRX" />
    <category term="luck" />
    <category term="social skills" />
    <category term="brain" />
    <category term="health" />
    <category term="programmer" />
    <category term="productivity" />
    <category term="QA" />
    <category term="extreme programming" />
    <category term="software" />
    <category term="httpcontext" />
    <category term="items" />
    <category term="session" />
    <category term="naming conventions" />
    <category term="variables" />
    <category term="self improvement" />
    <category term="301" />
    <category term="302" />
    <category term="fiddler" />
    <category term="infinite loop" />
    <category term="images" />
    <category term="iTextSharp" />
    <category term="PDF" />
    <category term="concatenation" />
    <category term="quirks" />
    <category term="parsing" />
    <category term="xhtml" />
    <category term="fonts" />
    <category term="stack" />
    <category term="htmltidy" />
    <category term="tables" />
    <category term="acrofields" />
    <category term="form fields" />
    <category term="outputstream" />
    <category term="pdfreader" />
    <category term="pdfstamper" />
    <category term="bind" />
    <category term="callbacks" />
    <category term="currying" />
    <category term="events" />
    <category term="business rules" />
    <category term="boolean" />
    <category term="fields" />
    <category term="methods" />
    <category term="object" />
    <category term="functions" />
    <category term="inheritance" />
    <category term="prototype" />
    <category term="hoist" />
    <category term="falsy" />
    <category term="truthy" />
    <category term="istanbul" />
    <category term="jasmine" />
    <category term="hoisting" />
    <category term="types" />
    <category term="type conversion" />
    <category term="dialog" />
    <category term="jQuery" />
    <category term="validation controls" />
    <category term="async" />
    <category term="each" />
    <category term="collapse" />
    <category term="expand" />
    <category term="load" />
    <category term="partial content" />
    <category term="tooltip" />
    <category term="regions" />
    <category term="limiting beliefs" />
    <category term="angular material" />
    <category term="linkedin" />
    <category term="social media" />
    <category term="tips" />
    <category term="CI. Continuous Integration" />
    <category term="magic numbers" />
    <category term="magic strings" />
    <category term="flex" />
    <category term="multiview" />
    <category term="wizard" />
    <category term="threading" />
    <category term="intern" />
    <category term="express" />
    <category term="node" />
    <category term="nunit" />
    <category term="object initializers" />
    <category term="video" />
    <category term="reflection" />
    <category term="unity" />
    <category term="best practice" />
    <category term="asp.net postback button" />
    <category term="iText" />
    <category term="property based testing" />
    <category term="cli" />
    <category term="software architecture" />
    <category term="rxjs. angular 2" />
    <category term="redirect" />
    <category term="response" />
    <category term="responsive design" />
    <category term="parallel" />
    <category term="selenium" />
    <category term="Marble Testing" />
    <category term="java" />
    <category term="grid" />
    <category term="hub" />
    <category term="serialization" />
    <category term="specflow" />
    <category term="like" />
    <category term="sql" />
    <category term="tsql" />
    <category term="where clause" />
    <category term="do while" />
    <category term="for next" />
    <category term="ms-sql" />
    <category term="while" />
    <category term="gamification" />
    <category term="paired programming" />
    <category term="reference types" />
    <category term="stringbuilder" />
    <category term="value types" />
    <category term="technical debt" />
    <category term="activetabindex" />
    <category term="postback" />
    <category term="tab control" />
    <category term="tabcontrol" />
    <category term="kata" />
    <category term="extjs" />
    <category term="email" />
    <category term="mailaddress" />
    <category term="mailmessage" />
    <category term="smtpclient" />
    <category term="Quality" />
    <category term="behavior" />
    <category term="psychology" />
    <category term="portal" />
    <category term="web 1.0" />
    <category term="web 2.0" />
    <category term="trace" />
    <category term="compiler" />
    <category term="errror" />
    <category term="warning" />
    <category term="connection string" />
    <category term="dataset" />
    <category term="error" />
    <category term="web.config" />
    <category term="tslint" />
    <category term="emotions" />
    <category term="hiring" />
    <category term="aspnet_regsql" />
    <category term="forms based authentication" />
    <category term="jsdom" />
    <category term="karma" />
    <category term="noTDD" />
    <category term="bundling" />
    <category term="gulp" />
    <category term="minification" />
    <category term="node.js" />
    <category term="file upload" />
    <category term="objects" />
    <category term="hide" />
    <category term="vb.net attributes" />
    <category term="nothing" />
    <category term="nullable" />
    <category term="conditional startup" />
    <category term="windows forms" />
    <category term="winforms" />
    <category term="char" />
    <category term="split" />
    <category term="strict" />
    <category term="clarity" />
    <category term="ui" />
    <category term="ux" />
    <category term="asmx" />
    <category term="error handling" />
    <category term="webservice" />
    <category term="binary" />
    <category term="bitwise" />
    <category term="operators" />
    <category term="automation" />
    <category term="browser" />
    <category term="mstest" />
    <category term="immutable" />
    <category term="global" />
    <category term="await" />
    <category term="webapi" />
    <category term="configuration" />
    <category term="devops" />
    <category term="testcasedata" />
    <category term="testcasesource" />
    <category term="closure" />
    <category term="loops" />
    <category term="certification" />
    <category term="mcsd" />
    <category term="microsoft" />
    <category term="inversion of control" />
    <category term="ioc" />
    <category term="casting" />
    <category term="convert" />
    <category term="arguements" />
    <category term="command line" />
    <category term="main" />
    <category term="yagni" />
    <category term="npm" />
    <category term="nvm" />
    <category term="resumes" />
    <category term="change-detection" />
    <category term="state-management" />
    <category term="web-workers" />
    <category term="libraries" />
    <category term="strong typing" />
    <category term="linting" />
    <category term="constructors" />
    <category term="clean code" />
    <category term="smart-ngrx" />
    <category term="ngrx-store" />
    <category term="ngrx-entity" />
    <category term="ngrx-effects" />
    <category term="TypeScript" />
    <category term="Performance" />
    <entry>
        <id>http://davembush.github.com/revisiting-the-technical-interview/</id>
        <title>Revisiting The Technical Interview</title>
        <link rel="alternate" href="http://davembush.github.com/revisiting-the-technical-interview/"/>
        <content type="html">&lt;p&gt;I’ve written about the technical interview before. I’ve written both &lt;a href=&#34;/3-reasons-responding-to-useless-interview-questions-makes-you-happier/&#34;&gt;for&lt;/a&gt; and &lt;a href=&#34;/cracking-the-programmers-interview-code/&#34;&gt;against&lt;/a&gt; code interviews. And I’ve provided both &lt;a href=&#34;/7-c-interview-questions-that-weed-out-the-losers/&#34;&gt;C#&lt;/a&gt; and &lt;a href=&#34;/7-javascript-interview-questions-to-weed-out-imposters/&#34;&gt;JavaScript&lt;/a&gt; questions to weed out fake programmers. But a little more experience under my belt has me rethinking what makes a good interview.&lt;/p&gt;
&lt;p&gt;Now, you may wonder why I think I’m particularly qualified to speak about the interview process. Most people who have opinions about the interview process in particular have it from only one side. The one of being the guy looking for a job. And, most of you only interview when you need a job.&lt;/p&gt;
&lt;p&gt;What makes me qualified is that, I help interview people looking for a job and I interview for lots of jobs. In my opinion, you should be interviewing for a job, even if you don’t need one, at least twice a year. I interview more frequently than that. In the last 6 months, I think I’ve interviewed at least 4 times.&lt;/p&gt;
&lt;p&gt;So, let me start by telling you what the current interview process looks like, and why it doesn’t work. Then, I’ll move on to the few interviews that I believe captured the information everyone was looking for quickly and how you can move the conversation in this direction regardless of what side of the table you are sitting on.&lt;/p&gt;
&lt;figure&gt;![](/uploads/2016/10/image.png &#34;Revisiting The Technical Interview&#34;)&lt;figcaption&gt;Photo credit: [Gangplank HQ](//www.flickr.com/photos/gangplankhq/5590138183/) via [Visualhunt](//visualhunt.com) / [CC BY](//creativecommons.org/licenses/by/2.0/)&lt;/figcaption&gt;&lt;/figure&gt;

&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;h2 id=&#34;The-Oral-Exam-Interview&#34;&gt;&lt;a href=&#34;#The-Oral-Exam-Interview&#34; class=&#34;headerlink&#34; title=&#34;The Oral Exam Interview&#34;&gt;&lt;/a&gt;The Oral Exam Interview&lt;/h2&gt;&lt;p&gt;I was part of a phone interview recently where every question we asked, the person who was answering the questions answered every question in such exquisite detail we were left thinking, “This guy is either REALLY smart, or he was reading something.” We later gave him a coding interview where we were able to watch him solve the problem. This revealed that he must have been reading something because the code interview revealed that he didn’t have any idea what he was talking about. It wasn’t even a difficult interview.&lt;/p&gt;
&lt;p&gt;What this tells me is that all interviews that ask specific technical questions can do is tell you that the person you are interviewing can hack the technical interview. Just like certifications, all you know is that they can take a test.&lt;/p&gt;
&lt;p&gt;In fact, we’ve actually hired some people who were able to even make it through a coding interview only to find out they couldn’t code.&lt;/p&gt;
&lt;p&gt;The obvious danger is that you could end up hiring someone who can’t really do the work because they were able to jump through your list of questions like some sort of trick pony.&lt;/p&gt;
&lt;p&gt;But there is an opposite danger.&lt;/p&gt;
&lt;p&gt;Just because someone can’t answer your questions, doesn’t mean they can’t do the work.&lt;/p&gt;
&lt;h2 id=&#34;The-Coding-Interview&#34;&gt;&lt;a href=&#34;#The-Coding-Interview&#34; class=&#34;headerlink&#34; title=&#34;The Coding Interview&#34;&gt;&lt;/a&gt;The Coding Interview&lt;/h2&gt;&lt;p&gt;As I’ve already hinted, the coding interview is no better. Sometimes it will weed out the people who have no business interviewing, but it really tells you nothing other than, “have they used this technology before.” Unfortunately, I’m seeing a rise in this type of interview. It will take a number of consistent failures before we start to see a decline.&lt;/p&gt;
&lt;p&gt;About 7 months ago, I was on the receiving end of a coding interview when I was asked to do some specific things while someone was watching. I failed the interview because the specific things I was asked to do, I had not done yet even though I had written a full application using the tools the test was around.&lt;/p&gt;
&lt;p&gt;I’ve had other interviews where I was asked to code stuff that had no relation to the business I was being asked to interview for.&lt;/p&gt;
&lt;p&gt;So once again, you are just as likely to weed out a good person as you are to weed out a bad person.&lt;/p&gt;
&lt;h2 id=&#34;The-Problem&#34;&gt;&lt;a href=&#34;#The-Problem&#34; class=&#34;headerlink&#34; title=&#34;The Problem&#34;&gt;&lt;/a&gt;The Problem&lt;/h2&gt;&lt;p&gt;In both cases, the problem is the same. You are asking questions that are way too specific. Someone who is quick with the search engines can find you the answer you are looking for if they can hide the fact that they are doing it. If you limit yourself to in person interviews, you limit who you can hire to people who live in the same geographic area.&lt;/p&gt;
&lt;p&gt;Even a video interview can hide the fact that the person interviewing is looking up the answers. I know, I’ve seen it done.&lt;/p&gt;
&lt;p&gt;Even if you do a face to face, the answers you are looking for might be wrong or out of date.&lt;/p&gt;
&lt;p&gt;I was at an interview where I was asked how memory was managed in .NET. Since I taught .NET for about 3.5 years at a training company and had actually taught this specific information, I was easily able to give them the information they were looking for. But because I also listen to podcasts, I was also able to amend the information with the fact that how it works in Windows is only how it works in Windows. The spec doesn’t actually dictate how memory gets managed. At least not at the level I think they wanted answered.&lt;/p&gt;
&lt;p&gt;But, what if they were looking for the answer that indicated that I knew how memory was managed under Windows and I gave the answer according to the spec? Fail!&lt;/p&gt;
&lt;h2 id=&#34;A-Better-Way&#34;&gt;&lt;a href=&#34;#A-Better-Way&#34; class=&#34;headerlink&#34; title=&#34;A Better Way&#34;&gt;&lt;/a&gt;A Better Way&lt;/h2&gt;&lt;p&gt;One of the best interviews I ever had was when I was interviewing for a JavaScript position. The question I was asked at the beginning of the interview way, “I know nothing about JavaScript, explain JavaScript to me.” I started talking and occasionally, I would be asked to drill deeper into a subject. It was a hard interview because it required me to break something down I was very familiar with, think on my feet, and demonstrate that I was able to explain things. It also demonstrated how much of JavaScript I knew.&lt;/p&gt;
&lt;p&gt;As I’ve thought about that interview and compared it to others I have been on, what I realize is that this demonstrated that the person who was interviewing me really wanted to know what did I know. In contrast, just about every oral exam interview I’ve been on has made me feel like the person interviewing me wanted to show me how much HE knew.&lt;/p&gt;
&lt;h2 id=&#34;The-Right-Questions-to-Ask&#34;&gt;&lt;a href=&#34;#The-Right-Questions-to-Ask&#34; class=&#34;headerlink&#34; title=&#34;The Right Questions to Ask&#34;&gt;&lt;/a&gt;The Right Questions to Ask&lt;/h2&gt;&lt;p&gt;So, if you want you can steal the question above. But the point is, we want to ask open ended questions.&lt;/p&gt;
&lt;p&gt;“I see on your resume; you’ve worked with Angular. What problems did you face while using that framework?” or “I see you have experience using Git and SubVersion. What do you like and dislike about each?” or “Tell me about some of the issues your ran into with your last project.” In other words, ask very open ended questions around the technology you are interested in that invite them to demonstrate that they’ve really used the technology they say they have used.&lt;/p&gt;
&lt;h2 id=&#34;What-if-You-Are-the-One-Being-Interviewed&#34;&gt;&lt;a href=&#34;#What-if-You-Are-the-One-Being-Interviewed&#34; class=&#34;headerlink&#34; title=&#34;What if You Are the One Being Interviewed?&#34;&gt;&lt;/a&gt;What if You Are the One Being Interviewed?&lt;/h2&gt;&lt;p&gt;So, you walk into an interview and you are asked an oral exam question. What do you do? Well, the first thing to do is to try to answer the stupid question (without reading of course.) And then, and this is the key part because it will change the course of the interview, tell a story.&lt;/p&gt;
&lt;p&gt;Whatever they ask, the thing you want to do as soon as you possibly can, is to change the question into, “where have you used X in the past?” So, let’s take a JavaScript question. “What does it mean that JavaScript uses prototypal inheritance.” You answer the question, “prototypal inheritance means … in fact, knowing this became really important on one of my recent projects because we used it to do …” and you are off to the races. When you finish demonstrating that you know the answer and it has been important to your work in the past, you might consider asking, “I was wondering, how has that been important to your work here?” Remember, your goal is convincing the people interviewing you that you really can do the work. That hiring you compared to the other people they are going to interview is going to be 10 times less risky.&lt;/p&gt;
&lt;p&gt;Turning it all around like this is an art. It takes practice. This is why I encourage developers I coach to interview frequently. Try stuff out. Experiment. When you get home, review what you were asked and think, “how could I answer that better the next time?” Because, many of the questions we get asked get asked by everyone.&lt;/p&gt;
&lt;p&gt;If someone ask a question you don’t know the answer to, just say so. My standard answer is, “I haven’t done much with that, but I’ve been programming for X years and there is Google, and &lt;a href=&#34;/pluralsight&#34;&gt;PluralSight&lt;/a&gt;, how hard can it be?” If you’ve never used it but have sniffed around the edges, say so. An attitude of “I can do this.” works a lot better than lying about it.&lt;/p&gt;
&lt;p&gt;There are some other things you can do to hack the interview process, like sitting sideways, spreading your arms out, and other “hypnotic” tweaks. But the best hack is spinning stories around your answers to change the interview from an exam into something more of a conversation.&lt;/p&gt;
</content>
        <category term="interview" />
        <updated>2016-10-11T10:30:00.000Z</updated>
    </entry>
    <entry>
        <id>http://davembush.github.com/your-programming-resume-is-garbage/</id>
        <title>Your Programming Resume is Garbage</title>
        <link rel="alternate" href="http://davembush.github.com/your-programming-resume-is-garbage/"/>
        <content type="html">&lt;p&gt;Over the last several years, I’ve had a chance to read a few Programming Resumes.  Or, I should say, TRY to read a few resumes.  But frankly, if the Programming Resume I typically see is common, everyone who reads my blog needs this advice.  I haven’t seen a barely adequate resume in years.  &lt;/p&gt;
&lt;p&gt;I’m sick of it.  Oh, it’s good for me of course.  I know my resume is going to stand out as such a unique work of art compared to the others, that I will get a call back right away.  After all, if the competition is so incredibly weak, I don’t even need to try.&lt;/p&gt;
&lt;p&gt;On the other hand, as someone who has to read these resumes, I’d like to have something better.&lt;/p&gt;
&lt;p&gt;And no, I’m not going to go over the standard “how to make your resume awesome” stuff because evidently most programmers can’t even get the basics down.  Seriously!&lt;/p&gt;
&lt;figure&gt;![](/uploads/2016/06/image-3.png &#34;Your Programming Resume is GARBAGE!&#34;)&lt;figcaption&gt;Photo credit: [ollesvensson](//www.flickr.com/photos/ollesvensson/2443240690/) via [Visualhunt.com](//visualhunt.com) / [CC BY](//creativecommons.org/licenses/by/2.0/)&lt;/figcaption&gt;&lt;/figure&gt;

&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;h2 id=&#34;Your-Programming-Resume-is-Too-Long&#34;&gt;&lt;a href=&#34;#Your-Programming-Resume-is-Too-Long&#34; class=&#34;headerlink&#34; title=&#34;Your Programming Resume is Too Long!&#34;&gt;&lt;/a&gt;Your Programming Resume is Too Long!&lt;/h2&gt;&lt;p&gt;I struggled for years to keep my resume down to two pages until I started seeing resumes from people with MUCH less experience than me that were 8 and 9 pages long.  And I thought my 4 pager was too long! Here’s a valuable tip.  No one really cares who you worked for 10 years ago.  Even if you are a contract programmer like I am and you tend to switch gigs once every year or so.  If you haven’t done it in the last year, I really don’t need a lot of detail about it.  What have you done recently?! Here’s what happens when I see an 8 pager.  I scan it for the buzz words I’m interested in and I see how often they show up.  I then try to see if I can discern how much you really know other than how to spell the buzzword.&lt;/p&gt;
&lt;h2 id=&#34;Your-Resume-Has-NO-White-Space&#34;&gt;&lt;a href=&#34;#Your-Resume-Has-NO-White-Space&#34; class=&#34;headerlink&#34; title=&#34;Your Resume Has NO White Space&#34;&gt;&lt;/a&gt;Your Resume Has NO White Space&lt;/h2&gt;&lt;p&gt;You need lots of this.  Just like in music, the rest are part of the music.  If nothing stands out in your resume, how am I supposed to tell what you are capable of doing?&lt;/p&gt;
&lt;h2 id=&#34;Did-you-try-to-USE-a-Word-Processor&#34;&gt;&lt;a href=&#34;#Did-you-try-to-USE-a-Word-Processor&#34; class=&#34;headerlink&#34; title=&#34;Did you try to USE a Word Processor?&#34;&gt;&lt;/a&gt;Did you try to USE a Word Processor?&lt;/h2&gt;&lt;p&gt;I’m sure you are thinking, “yeah, I did” But from the resumes I’ve seen it barely looks like you used more than an old fashion type writer.  There are two issues here.  First, your document is boring.  This goes along with the white space issue.  Once again, how can I tell what is important if it is all the same font and all jammed together?  Print out your resume.  Forget for a second that this is your resume.  Squint your eyes or otherwise look at it without being able to see the characters.  What stands out?  Does anything stand out?  What do you want people to focus on? The second issue here is this.  If you can’t use the basic features of a Word Processor, how good of a Programmer are you really?!&lt;/p&gt;
&lt;h2 id=&#34;Lack-of-Organization&#34;&gt;&lt;a href=&#34;#Lack-of-Organization&#34; class=&#34;headerlink&#34; title=&#34;Lack of Organization&#34;&gt;&lt;/a&gt;Lack of Organization&lt;/h2&gt;&lt;p&gt;This one is a little subtler.  I’m sure most people think their resumes are organized.  Most of what I see looks like this: The first page has some form of a “summary” of what the person has done.  Generally, a lot of bullet points that look no different than the same information they put in the work history.&lt;/p&gt;
&lt;p&gt;The next seven or more pages have the work history with bullets under each with what the person did.&lt;/p&gt;
&lt;p&gt;But here is my problem.  You are making me wade through that first section to see if you did anything I’m interested in.  It would be so much easier if you organized those bullets a bit.  Again, white space, different fonts.&lt;/p&gt;
&lt;h2 id=&#34;You-Have-too-many-Bullets-per-Job&#34;&gt;&lt;a href=&#34;#You-Have-too-many-Bullets-per-Job&#34; class=&#34;headerlink&#34; title=&#34;You Have too many Bullets per Job&#34;&gt;&lt;/a&gt;You Have too many Bullets per Job&lt;/h2&gt;&lt;p&gt;Yeah.  I did this too.  But it was for a place I worked at for 8 years.  There was a lot to tell.  But then I realized, no one cares.&lt;/p&gt;
&lt;p&gt;Here is all I care about with your work history.  What technology did you use?  Did you do something interesting?  And bonus points if you can tell me what value you provided.  Who are you beyond what technology you know? My current format has two bullets for each assignment that emphasize my strengths as a programmer generally.  This is the value I provided.&lt;/p&gt;
&lt;p&gt;The third bullet is the list of technology I used at that assignment.  This is because, while I’ve listed all the tech I know at the top, I believe most places want to know where I got the experience.  I know I would.&lt;/p&gt;
&lt;h2 id=&#34;Multiple-Short-Gigs&#34;&gt;&lt;a href=&#34;#Multiple-Short-Gigs&#34; class=&#34;headerlink&#34; title=&#34;Multiple Short Gigs&#34;&gt;&lt;/a&gt;Multiple Short Gigs&lt;/h2&gt;&lt;p&gt;A recent programming resume I saw had multiple 3 and 4 month assignments.  This is a HUGE warning flag.  Anyone looking at your resume is going to take one look at that and all kinds of warning bells are going to go off in their head.  Especially if you can’t explain why they were short.  Maybe they weren’t your fault.  But let me tell you what is going on at the hiring side.  We do a tech interview, the person comes in and we find out they have no clue how to do anything we hired them for.  If you have multiple short assignments, the first thing we think is, “He has to be lying about what he can do.” Then again, if you are lying about what you can do, why not lie about how long you worked some place?  Not that I’m suggesting that.  We’ll find out soon enough.  But if you are already lying…&lt;/p&gt;
&lt;h2 id=&#34;Only-What-You-Know&#34;&gt;&lt;a href=&#34;#Only-What-You-Know&#34; class=&#34;headerlink&#34; title=&#34;Only What You Know&#34;&gt;&lt;/a&gt;Only What You Know&lt;/h2&gt;&lt;p&gt;This should be obvious, but I see so many resumes that have exactly what we are looking for and then when we give a simple coding exercise, they can’t do the exercise.&lt;/p&gt;
&lt;p&gt;We aren’t trying to trip you up.  Just prove you’ve done something with the technology before.  Please.&lt;/p&gt;
&lt;p&gt;Just as a recent example.&lt;/p&gt;
&lt;p&gt;We did a phone screen with a guy and we asked him several very technical questions.  No code.  Just, “what can you tell me about X” kind of questions.  And he answered all of them in very intricate detail.  He sounded really good.  But after a half hour of this, you start to wonder.  “If he is THIS smart, why is he interviewing for THIS job?”  It isn’t like we are any of the really big tech companies.&lt;/p&gt;
&lt;p&gt;When we finished the phone screen, I told the guy I was doing the interview with, “He’s either wicked smart or he was reading.”  Well, there is only one way to find out.  Do a face to face where he can’t read.  Only we couldn’t do that because he lived too far away.  So the next best thing was a skype interview with a shared code screen.&lt;/p&gt;
&lt;p&gt;All we asked the guy to do was a simple object oriented abstraction exercise.  OOP 101.  It became clear that he didn’t have any clue about how to do Object Oriented Programming nor did he know anything about any of the technology we were going to ask him to do.&lt;/p&gt;
&lt;p&gt;I guess this must work some of the time because we keep seeing this.&lt;/p&gt;
&lt;h2 id=&#34;Keep-On-Generating-Garbage&#34;&gt;&lt;a href=&#34;#Keep-On-Generating-Garbage&#34; class=&#34;headerlink&#34; title=&#34;Keep On Generating Garbage&#34;&gt;&lt;/a&gt;Keep On Generating Garbage&lt;/h2&gt;&lt;p&gt;Like I said, the part of me that is competing with you for work wants you to continue producing crap.  It makes it SO much easier for me to land my next gig.  And now that I know, it has actually shaped what my resume looks like.  Two pages.  Just the essentials.  Links to places where they can get more information about me if they want to go that deep.&lt;/p&gt;
</content>
        <category term="interview" />
        <category term="resumes" />
        <updated>2016-06-30T10:30:00.000Z</updated>
    </entry>
    <entry>
        <id>http://davembush.github.com/3-reasons-responding-to-useless-interview-questions-makes-you-happier/</id>
        <title>3 Reasons Responding To Useless Interview Questions Makes You Happier</title>
        <link rel="alternate" href="http://davembush.github.com/3-reasons-responding-to-useless-interview-questions-makes-you-happier/"/>
        <content type="html">&lt;p&gt;I’ve noticed a trend recently.  Someone will write a post about some technical interview question and someone will write a comment about how that’s such a dumb question that they wouldn’t even bother answering it.  I’ve actually been that guy recently.  John Sonmez wrote about “&lt;a href=&#34;//simpleprogrammer.com/2015/01/19/cracking-the-coding-interview/&#34;&gt;Cracking the Coding Interview&lt;/a&gt;” and I responded that I don’t do coding interviews.  &lt;a href=&#34;/cracking-the-programmers-interview-code/&#34;&gt;In fact, I wrote a whole post about this&lt;/a&gt;.  But as John pointed out, this may actually cause you to be limiting your career.  You wouldn’t answer that question for a 33% raise?  Really?  There isn’t anything that could motivate you to consider answering a question that you feel is useless, stupid or dumb? This week, I saw another post about some technical interview question that someone said he wouldn’t answer.  Sorry, I don’t have a link for that one, I wish I did.&lt;/p&gt;
&lt;p&gt;And then add to this, the number of useless interview questions I have answered in the last year.  Why did I answer them?  Because I could.  Because the challenge was actually fun.&lt;/p&gt;
&lt;p&gt;And so, let’s reconsider the arrogant stance of “Thanks for your time, I’ll show myself out.” First let’s consider why we might not want to answer a particular question.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/uploads/2015/09/image1.png&#34; alt=&#34;image&#34; title=&#34;image&#34;&gt;&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;h2 id=&#34;Telling-The-Truth-Makes-You-Happier&#34;&gt;&lt;a href=&#34;#Telling-The-Truth-Makes-You-Happier&#34; class=&#34;headerlink&#34; title=&#34;Telling The Truth Makes You Happier.&#34;&gt;&lt;/a&gt;Telling The Truth Makes You Happier.&lt;/h2&gt;&lt;p&gt;As I said, I’ve answered a lot of useless questions.  Most recently, I was asked about how garbage collection works in .NET.  When is the last time anyone needed to know that?  Isn’t the whole point of .NET that memory management gets handled for you?  Someone else may have refused to answer the question.  Why?  Because we don’t think we can.&lt;/p&gt;
&lt;p&gt;The reason I don’t like code interviews is because 1) I’ve never had to do one and 2) I’m afraid I won’t be able to do it.&lt;/p&gt;
&lt;p&gt;Dumb reason! The post I mentioned earlier that I don’t have a link for was something about how linked lists worked.  Or sorting.  Why did he consider it an issue?  Maybe because he didn’t feel like he could answer it? Let’s face it, most of use, rather than admitting we don’t know something, would just rather deflect the problem to the person asking the question.&lt;/p&gt;
&lt;p&gt;And so, the first way that just answering the question will make you happier is that telling the truth makes you happier.&lt;/p&gt;
&lt;p&gt;The more honest we are with ourselves and with others, &lt;a href=&#34;//www.smh.com.au/lifestyle/life/time-to-come-clean-little-white-lies-found-to-be-a-health-hazard-20120805-23o0t.html&#34;&gt;the happier we are&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;So, rather than taking the stance of “I won’t answer that question”, why not prepare yourself so that you CAN answer the question? And this leads to my second reason…&lt;/p&gt;
&lt;h2 id=&#34;You-Will-Gain-Confidence&#34;&gt;&lt;a href=&#34;#You-Will-Gain-Confidence&#34; class=&#34;headerlink&#34; title=&#34;You Will Gain Confidence&#34;&gt;&lt;/a&gt;You Will Gain Confidence&lt;/h2&gt;&lt;p&gt;How’s that?  Well, let’s say you answer the question, the first time, the best way that you know how but you know you were pretty shaky.  So, you go home, and look up the answer.  The next time you get asked the question, you are better prepared.  You’ve learned something along the way and are now more confident.  Or, you may find out that the question wasn’t all that important given all you were able to answer.&lt;/p&gt;
&lt;p&gt;I’ll tell you a little insider secret.  If you really know your stuff, you’ll probably get the job anyhow.  The interviewer is just trying to figure out how much you know.  If you’ve gotten to the point where they are asking one of these seemingly irrelevant questions, you’ve probably already got the job.&lt;/p&gt;
&lt;p&gt;Most people can’t even answer the basic questions I’ve previously blogged about:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/7-c-interview-questions-that-weed-out-the-losers/&#34;&gt;Basic C# Questions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/7-javascript-interview-questions-to-weed-out-imposters/&#34;&gt;Basic JavaScript Questions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I know of at least two places that have interviewed 10 people just to find one that would be OK.  Knowing this, alone, has given me a lot more confidence when I interview.&lt;/p&gt;
&lt;p&gt;But as people have mentioned on those post, just because they can answer the questions, doesn’t mean they can code.  We have to have other questions we can ask you to get at that.&lt;/p&gt;
&lt;p&gt;I’ve been in two interviews, that I can remember that did this well.  One was for a position that was mostly JavaScript.  In fact, he never asked me anything about C#.  What he said was something like, “I know nothing about JavaScript, tell me about JavaScript.”  And then he stopped talking and listened to me.  Every once in a while he would say, “Tell me more about that.”  That was the entire interview.&lt;/p&gt;
&lt;p&gt;A couple of weeks ago, I was asked to talk about my experience with ASP.NET’s MVC.&lt;/p&gt;
&lt;p&gt;A question that was just as open ended.  The guy’s boss, who was the hiring manager, questioned the open endedness of the question.  The response was, “I want to know if he’s worked with it before.  If he has, he should be able to answer that question.” Interestingly, there were no JavaScript questions this time.&lt;/p&gt;
&lt;h2 id=&#34;You-Might-Get-Your-Dream-Job&#34;&gt;&lt;a href=&#34;#You-Might-Get-Your-Dream-Job&#34; class=&#34;headerlink&#34; title=&#34;You Might Get Your Dream Job&#34;&gt;&lt;/a&gt;You Might Get Your Dream Job&lt;/h2&gt;&lt;p&gt;Listen!  You decided to interview, I assume, because you wanted this job, or at least thought you might want this job.  You’re going to walk out of an interview and make yourself look like an ass simply because you don’t like the question?  Who is being dumb now?! Like I said, it is so hard to find good talent, that if they are asking hard questions, you’ve probably already got the job anyhow.  But if you walk out, not only do you not have the job, but you’ll never get a second chance to interview with the people in the room again, and that includes when they show up at other companies.  Think that’s not true?  I know I keep a mental list of people I might want to consider in the future.  Both people I’ve worked with and people I’ve interviewed.&lt;/p&gt;
&lt;p&gt;So take your best stab at the question.  There have been a number of times when my answer has been, I don’t know, but here is how I’d find out when I needed it.  Often the “how I’d get the information answer” is better than actually being able to answer the question.&lt;/p&gt;
&lt;p&gt;So, dare to answer the questions.  The results might surprise you.&lt;/p&gt;
</content>
        <category term="interview" />
        <category term="job search" />
        <updated>2015-09-10T11:30:00.000Z</updated>
    </entry>
    <entry>
        <id>http://davembush.github.com/7-javascript-interview-questions-to-weed-out-imposters/</id>
        <title>7 JavaScript Interview Questions [To Weed Out Imposters]</title>
        <link rel="alternate" href="http://davembush.github.com/7-javascript-interview-questions-to-weed-out-imposters/"/>
        <content type="html">&lt;p&gt;&lt;img src=&#34;/uploads/2015/08/image2.png&#34; alt=&#34;image&#34; title=&#34;image&#34;&gt;&lt;/p&gt;
&lt;p&gt;Last week, I posted &lt;a href=&#34;/7-c-interview-questions-that-weed-out-the-losers/&#34;&gt;7 interview questions for C# programmers.&lt;/a&gt;  I guess I forgot that people can’t see in my brain.  So, let me be very explicit this time.  The “weed out the losers” questions are meant to do just that.  Weed out people who have absolutely no business even applying for the job.&lt;/p&gt;
&lt;p&gt;You would be amazed at how many people interview for a job who have all kinds of cool buzzwords on their resume, but when you ask them about it, they know nothing about the subject.  I’m not sure if this is the recruiter who is representing them trying to help them out by beefing up the resume to get them in the door or if they actually do this themselves.  But, as someone who interviews, I have to have a way of making sure the applicant I’m interviewing is worth interviewing in the first place.  Hopefully, I can do this over the phone in less than a half an hour.&lt;/p&gt;
&lt;p&gt;So, with that said, if your favorite question isn’t on this list, it is probably because it is a question I would save for some future interview.&lt;/p&gt;
&lt;p&gt;Also, to those of you who may think that a technical interview doesn’t really tell you if the programmer is a good programmer or not, I have this to say… You are right.  And when I was a younger programmer and was being interviewed with technical questions, I felt the same way.  But now that I’m on the other side of the table, I find that way too often, the people who can pass a technical interview are a lot more likely to be good programmers than the ones who can’t.&lt;/p&gt;
&lt;p&gt;And finally, I would not rule out an applicant because he got a couple of questions wrong, or didn’t answer them exactly the way I expected.  But if couldn’t answer most of them, that would raise a huge red flag! So, here are 7 JavaScript Interview Questions you should ask first.  Otherwise, you may be wasting your time.&lt;/p&gt;
&lt;h2 id=&#34;What-are-two-ways-you-might-create-an-object-in-JavaScript&#34;&gt;&lt;a href=&#34;#What-are-two-ways-you-might-create-an-object-in-JavaScript&#34; class=&#34;headerlink&#34; title=&#34;What are two ways you might create an object in JavaScript?&#34;&gt;&lt;/a&gt;What are two ways you might create an object in JavaScript?&lt;/h2&gt;&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;p&gt;This is a pretty simple question if you’ve been using JavaScript.  Shoot, you should even be able to guess at one of the answers.  But, still, in my experience, there are a lot of people who say they are JavaScript programmers who don’t know how to answer this question.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use the “new” keyword to call a function.&lt;/li&gt;
&lt;li&gt;Use the open&amp;#x2F;close curly braces.&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; o = &amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;You might want to follow up with, “using the new keyword, at what point is the object created?”  But, as far as questions that weed out, I would consider that something that could wait until I’m really interviewing to discover how deep the applicant’s knowledge goes.&lt;/p&gt;
&lt;h2 id=&#34;How-would-you-create-an-array&#34;&gt;&lt;a href=&#34;#How-would-you-create-an-array&#34; class=&#34;headerlink&#34; title=&#34;How would you create an array?&#34;&gt;&lt;/a&gt;How would you create an array?&lt;/h2&gt;&lt;p&gt;This is a similar level question to “How do you create an object.”  And yet, there are some who can answer the first who can’t answer this one.&lt;/p&gt;
&lt;p&gt;While it is possible to create an array with&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; myArray = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Array&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;It is a long way of creating an array.  One would hope that the answer included using square brackets.&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; myArray = [];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;Once again, there are other questions we could ask, but since we only want to know that the applicant is worth further investigation, I would leave the array questioning here.&lt;/p&gt;
&lt;h2 id=&#34;What-is-variable-hoisting&#34;&gt;&lt;a href=&#34;#What-is-variable-hoisting&#34; class=&#34;headerlink&#34; title=&#34;What is variable hoisting?&#34;&gt;&lt;/a&gt;What is variable hoisting?&lt;/h2&gt;&lt;p&gt;This one is a slightly harder question to answer, and I wouldn’t expect anyone to be able to answer this.  But again, we are trying to get a quick determination of the applicant’s skill level.  How well do they understand the language they claim to know? Variable hoisting is the term that refers to the fact that no matter where a variable is declared in a scope, the JavaScript engine will move that declaration to the top of the scope.  If you declare a variable in the middle of a function, for example and assign a value to it all in one line:&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;foo&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// a bunch of code here&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; a = &lt;span class=&#34;string&#34;&gt;&amp;quot;abc&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;The code that actually gets run would look like this:&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;foo&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; a;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// a bunch of code&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    a = &lt;span class=&#34;string&#34;&gt;&amp;quot;abc&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;What-are-the-dangers-of-global-variables-and-how-do-you-protect-against-it&#34;&gt;&lt;a href=&#34;#What-are-the-dangers-of-global-variables-and-how-do-you-protect-against-it&#34; class=&#34;headerlink&#34; title=&#34;What are the dangers of global variables and how do you protect against it?&#34;&gt;&lt;/a&gt;What are the dangers of global variables and how do you protect against it?&lt;/h2&gt;&lt;p&gt;The danger of global variables is that someone else could create a variable with the same name and overwrite the variable you are using.  This is a bad idea in any language.&lt;/p&gt;
&lt;p&gt;You prevent this in a number of ways.  The most common would be to create one global variable that all of your other variables live in:&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; applicationName = &amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;And then any time you need to create a global variable, you attach it to that object.&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;applicationName.&lt;span class=&#34;property&#34;&gt;myVariable&lt;/span&gt; = &lt;span class=&#34;string&#34;&gt;&amp;quot;abc&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;The other way you can guard against this is by wrapping all of your code in a self-executing function so that any variables that are declared are declared within that function’s scope.&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; a = &lt;span class=&#34;string&#34;&gt;&amp;quot;abc&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;In reality, you’ll probably end up using both methods.&lt;/p&gt;
&lt;h2 id=&#34;How-do-you-iterate-through-members-in-a-JavaScript-object&#34;&gt;&lt;a href=&#34;#How-do-you-iterate-through-members-in-a-JavaScript-object&#34; class=&#34;headerlink&#34; title=&#34;How do you iterate through members in a JavaScript object?&#34;&gt;&lt;/a&gt;How do you iterate through members in a JavaScript object?&lt;/h2&gt;&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; prop &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; obj)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// bonus points for hasOwnProperty&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(obj.&lt;span class=&#34;title function_&#34;&gt;hasOwnProperty&lt;/span&gt;(prop))&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// do something here&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;What-is-a-closure&#34;&gt;&lt;a href=&#34;#What-is-a-closure&#34; class=&#34;headerlink&#34; title=&#34;What is a closure?&#34;&gt;&lt;/a&gt;What is a closure?&lt;/h2&gt;&lt;p&gt;A closure is what allows a function inside the scope of another function to still be able to see the variables declared in the outer scope even after everything else about that scope has disappeared.  Bonus points if they state something about the dangers of using a closure inside of a for&amp;#x2F;next loop without declaring a variable to hold the current value of the iteration variable.&lt;/p&gt;
&lt;h2 id=&#34;Describe-your-experience-unit-testing-JavaScript&#34;&gt;&lt;a href=&#34;#Describe-your-experience-unit-testing-JavaScript&#34; class=&#34;headerlink&#34; title=&#34;Describe your experience unit testing JavaScript&#34;&gt;&lt;/a&gt;Describe your experience unit testing JavaScript&lt;/h2&gt;&lt;p&gt;Here we are just trying to find out if they’ve even done unit testing with JavaScript.  It is an open-ended question with no particular right answer but it should tell you something in the process.&lt;/p&gt;
</content>
        <category term="javascript" />
        <category term="interview" />
        <updated>2015-08-20T11:30:00.000Z</updated>
    </entry>
    <entry>
        <id>http://davembush.github.com/7-c-interview-questions-that-weed-out-the-losers/</id>
        <title>7 C# Interview Questions [That Weed Out The Losers!]</title>
        <link rel="alternate" href="http://davembush.github.com/7-c-interview-questions-that-weed-out-the-losers/"/>
        <content type="html">&lt;p&gt;&lt;img src=&#34;/uploads/2015/08/image1.png&#34; alt=&#34;image&#34; title=&#34;image&#34;&gt;&lt;/p&gt;
&lt;p&gt;So, once again, the place I am currently working has been interviewing for some more programmers and we’ve had to laugh at some of the answers we’ve received on some pretty simple question.&lt;/p&gt;
&lt;p&gt;For example, in answer to “How do you create an object in JavaScript?”  One applicant responded, “I always use the WHERE keyword.”  What?!!! And that naturally got us all talking about good interview questions.  How can we tell that the applicant is even worth interviewing? The following questions are not meant to be THE interview.  The questions are meant to shorten the interview process by ensuring the applicant has a basic understanding of the language they will be expected to work with.&lt;/p&gt;
&lt;h2 id=&#34;C-Interview-Questions&#34;&gt;&lt;a href=&#34;#C-Interview-Questions&#34; class=&#34;headerlink&#34; title=&#34;C# Interview Questions&#34;&gt;&lt;/a&gt;C# Interview Questions&lt;/h2&gt;&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;h3 id=&#34;1-What-is-the-difference-between-an-Object-and-a-Class&#34;&gt;&lt;a href=&#34;#1-What-is-the-difference-between-an-Object-and-a-Class&#34; class=&#34;headerlink&#34; title=&#34;1. What is the difference between an Object and a Class?&#34;&gt;&lt;/a&gt;1. What is the difference between an Object and a Class?&lt;/h3&gt;&lt;p&gt;This is an object oriented 101 question.  So if you can’t answer this, I might try a few other questions for show, but you’ve probably already been counted out.  The way I always described the difference between the two is that the Class is like a cookie cutter and an Object is like the cookie.  The class defines what the object is going to do, but the object is the thing actually doing the work.&lt;/p&gt;
&lt;p&gt;A more technical answer would be that the Class defines the object while the Object is the Class active in memory.&lt;/p&gt;
&lt;h3 id=&#34;2-What-is-“Polymorphism”&#34;&gt;&lt;a href=&#34;#2-What-is-“Polymorphism”&#34; class=&#34;headerlink&#34; title=&#34;2. What is “Polymorphism”?&#34;&gt;&lt;/a&gt;2. What is “Polymorphism”?&lt;/h3&gt;&lt;p&gt;This is my first stab at making sure you understand the basics of object oriented programming.  Does your answer at least include the concept of virtual functions?  Here is how I explain polymorphism.&lt;/p&gt;
&lt;p&gt;Polymorphism gets at the idea that you can have a method in a parent class and a method with the same name in a child class.  If the method in the parent class should be marked virtual and the method in the child class should be marked “overrides.”  At runtime, the decision as to which one is called is based on the type of the object that the method is called from.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;//www.webopedia.com/TERM/P/polymorphism.html&#34;&gt;http://www.webopedia.com/TERM/P/polymorphism.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Some might want to include other concepts&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;//en.wikipedia.org/wiki/Polymorphism_(computer_science)&#34;&gt;https://en.wikipedia.org/wiki/Polymorphism_(computer_science)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;But historically, polymorphism has been limited to the basic idea of virtual functions and the applicant’s response should, at the very least, reflect this answer.&lt;/p&gt;
&lt;h3 id=&#34;3-What-is-the-difference-between-overload-overrides-and-shadows&#34;&gt;&lt;a href=&#34;#3-What-is-the-difference-between-overload-overrides-and-shadows&#34; class=&#34;headerlink&#34; title=&#34;3. What is the difference between overload, overrides, and shadows?&#34;&gt;&lt;/a&gt;3. What is the difference between overload, overrides, and shadows?&lt;/h3&gt;&lt;p&gt;Again, this is to get at your understanding of object oriented programming generally and the sometimes confusing keywords in the language.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Overloading gets at the concept that you can have multiple methods with the same name hanging off a given class as long as the methods all have a different signature (parameter types), the code is legal.&lt;/li&gt;
&lt;li&gt;Overrides is how polymorphism is implemented.&lt;/li&gt;
&lt;li&gt;Shadows flips polymorphism on it’s head.  If you mark a method as shadowed using the “new” keyword, then instead of the method getting called based on the object type, the method gets called based on the variable type that is holding the reference to the object.  So, given class A is a parent of class B and both have a method foo() and foo() is marked with the shadows keyword.  If you declare a variable of type A and point that variable to an object of type B, when you call foo off that object, A.foo() will be called.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-What-is-the-difference-between-the-keyword-“String”-and-the-keyword-“string”&#34;&gt;&lt;a href=&#34;#4-What-is-the-difference-between-the-keyword-“String”-and-the-keyword-“string”&#34; class=&#34;headerlink&#34; title=&#34;4. What is the difference between the keyword  “String” and the keyword “string”?&#34;&gt;&lt;/a&gt;4. What is the difference between the keyword  “String” and the keyword “string”?&lt;/h3&gt;&lt;p&gt;I work with some pretty sharp guys and even they stumbled on this one.  Do YOU know? When I was teaching C# for a training company, I would say, “The only difference is that ‘string’ turns blue in the editor.”  Of course now that you can configure the editor, that’s not really a good answer.  But you get the point.  Both keywords compile down to the same intermediate language.  Technically, “string” is an alias for “String”.  “String” is the proper class.&lt;/p&gt;
&lt;h3 id=&#34;5-What-is-“int”-an-alias-for&#34;&gt;&lt;a href=&#34;#5-What-is-“int”-an-alias-for&#34; class=&#34;headerlink&#34; title=&#34;5. What is “int” an alias for?&#34;&gt;&lt;/a&gt;5. What is “int” an alias for?&lt;/h3&gt;&lt;p&gt;Since we’ve already used the term alias by this point, I’m digging deep to find out just how much you know.  The proper answer is that “int” is an alias for the Int32 type.  I can forgive you if you say “class” but it really isn’t a class.  It is a type.&lt;/p&gt;
&lt;h3 id=&#34;6-What-is-the-difference-between-a-value-type-and-a-reference-type&#34;&gt;&lt;a href=&#34;#6-What-is-the-difference-between-a-value-type-and-a-reference-type&#34; class=&#34;headerlink&#34; title=&#34;6. What is the difference between a value type and a reference type?&#34;&gt;&lt;/a&gt;6. What is the difference between a value type and a reference type?&lt;/h3&gt;&lt;p&gt;Once again, I’m trying to find out how well you know what is going on.  Do you just hack at your code until it seems to work, or do you really understand what is happening under the hood? Again, when I was teaching this, the explanation always went something like this: The value of a value type occupies memory on the stack and when you do an assignment from one value type to another the data is copied from one memory location to the other.  Each variable is changed in isolation to the other.&lt;/p&gt;
&lt;p&gt;A reference type is a variable on the stack that points to memory in the heap that actually holds the value.  When you do an assignment from one reference type to another, only the pointer is copied.  In the end, both variables point to the same location on the heap.&lt;/p&gt;
&lt;p&gt;If you change the value of a reference type from one variable, the other variable is impacted with the change because it is the same location in memory you are changing.&lt;/p&gt;
&lt;p&gt;The key part of this answer is that the value of a value type occupies the memory the variable represents and that the value of a reference type is pointed to by the memory that the variable represents.  The stack vs heap issue is secondary and in fact gets clouded by the fact that once you put a value type in a reference type, either by boxing or by including it as a member of a class, the whole stack vs heap question gets quite murky.  But, using stack vs heap as a general way of discussing the main issue is a starting point at the very least.&lt;/p&gt;
&lt;h3 id=&#34;7-What-is-the-primary-factor-in-making-code-testable&#34;&gt;&lt;a href=&#34;#7-What-is-the-primary-factor-in-making-code-testable&#34; class=&#34;headerlink&#34; title=&#34;7. What is the primary factor in making code testable?&#34;&gt;&lt;/a&gt;7. What is the primary factor in making code testable?&lt;/h3&gt;&lt;p&gt;OK.  You knew I had to stick this one in here, right?  I doubt most programmers have given this much thought so it is OK if they have to spend some time thinking of the answer.&lt;/p&gt;
&lt;p&gt;What I’m hoping to hear is that dependencies make code untestable.&lt;/p&gt;
&lt;p&gt;Simplistic answer?  Maybe.  But the answer to this question, regardless of if it agrees with mine or not, will tell me if they’ve had any experience writing unit tests.&lt;/p&gt;
</content>
        <category term="interview" />
        <category term="c#" />
        <updated>2015-08-13T11:30:00.000Z</updated>
    </entry>
    <entry>
        <id>http://davembush.github.com/cracking-the-programmer-s-interview-code/</id>
        <title>Cracking the Programmer&#39;s Interview Code</title>
        <link rel="alternate" href="http://davembush.github.com/cracking-the-programmer-s-interview-code/"/>
        <content type="html">&lt;p&gt;&lt;img src=&#34;/uploads/2015/04/33Tr.png&#34; alt=&#34;33Tr&#34; title=&#34;33Tr&#34;&gt;&lt;/p&gt;
&lt;p&gt;Several comments this week contribute to this week’s post.&lt;/p&gt;
&lt;p&gt;The first, and the one that pushed me to write this post, is a discussion over at Simple Programmer on a post called “&lt;a href=&#34;//simpleprogrammer.com/2015/01/19/cracking-the-coding-interview/&#34;&gt;Cracking the Coding Interview&lt;/a&gt;” where I made the following statement,&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;blockquote&gt;
&lt;p&gt;Coding interview? Really? I wouldn’t bother. This is right up there with working 60 hour weeks for me. Yes, I know all the big companies do this, but it doesn’t make it right. “Just because you can, doesn’t mean you should.” I’ve been programming now for 27 years. I started with DOS 3.1 for anyone who’s trying to figure out when that was. I’ve NEVER had to do a coding interview and I make really good money so it isn’t that I’m working for minimum wage. Here’s the deal. I can tell in about 10 minutes if another programmer knows their stuff. I expect that any company worth working for (and yes that includes even Amazon, Google, Microsoft, and the other big boys) should have someone on their staff who can do the same. The best interview I’ve ever had is from the guy I currently work under. The question was, “I know nothing about JavaScript, tell me what I need to know.” And then he just shut up and let me talk. Every once in a while, he’s ask me to drill deeper on the topic. But it is the only interview in 27 years where I felt like the guy interviewing me really wanted to know what I knew. Most of the other tech interviews I’ve been on have been more of the interviewer telling me how much he knew (by asking impossible questions). Now, if I ever did run into an interview where they wanted me to write code on a whiteboard, I’d probably pseudo code it out and explain that I’m a huge fan of Intellisense, particularly ReSharper, and Google and that I rely heavily on those two to get the syntax right. If you want a guy who can write code in notepad, I’m probably not the guy you’re looking for. If you want a guy who can solve problems, who understands how to write testable code, write unit test, can mentor younger programmers, understands what it really means to be agile, and can say “no” to power when it is appropriate, then I’m the guy you want.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;  OK, I admit, that probably came off a little strong.  But the point is, I don’t see any value in coding tests.  And when I interview others, what a coding test would reveal isn’t what I want to know about the interviewee and isn’t what I want to be known for.&lt;/p&gt;
&lt;h2 id=&#34;Response&#34;&gt;&lt;a href=&#34;#Response&#34; class=&#34;headerlink&#34; title=&#34;Response&#34;&gt;&lt;/a&gt;Response&lt;/h2&gt;&lt;p&gt;That was weeks ago.  The comment was followed up yesterday by this response&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Why wouldn’t you want to have all the qualities of the latter and the ability to write code in notepad? Who says you have to be one or the other? It seems to me that most places would want to hire someone who could do both. In all my interviews, as a candidate, I’ve walked out having learned something new from a coding challenge. It’s a “free” opportunity to learn something new from someone who has different experiences and levels of understanding than I do. It’s also a good opportunity for me to recognize my knowledge gaps where I need to be stronger. Also, I think you missed out on one really critical component of white boarding code challenges. As someone who’s been on the asking questions side, I’m okay with the candidate not knowing the intricacies of array manipulation in JavaScript, but being able to have someone talk through a problem and ask questions and have a dialogue is a really important aspect for me. I really want to know how tenacious a candidate is at figuring out a problem. If they get an answer right away, we’ll move onto something else, but I want to know how willing they are to break through the wall when they don’t immediately know how to solve a problem. I also want to work with someone I enjoy solving problems with, who isn’t going to look down at their peers because they don’t have experience in time or if they have knowledge gaps. Coding challenges are an easy way to hash these things out. I’ve never made a life decision based on a 10 minute conversation and I’d hope no one would ever make a decision that could impact the next 3-5 years of my life based on a 10 minute conversation where a little extra time doing something that’s relevant and challenging could be more indicative of how I will do as a potential future team member.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;Recruiter-Says&#34;&gt;&lt;a href=&#34;#Recruiter-Says&#34; class=&#34;headerlink&#34; title=&#34;Recruiter Says&#34;&gt;&lt;/a&gt;Recruiter Says&lt;/h2&gt;&lt;p&gt;And then there was this offhand comment by a recruiter this week who told me, “You know what reason most hiring managers give for refusing candidates we send them is?  ‘They aren’t dynamic enough.’  What does that even mean?” And so rather than write a whole blog post as a blog comment, I respond here.&lt;/p&gt;
&lt;h2 id=&#34;Why-Not-Both&#34;&gt;&lt;a href=&#34;#Why-Not-Both&#34; class=&#34;headerlink&#34; title=&#34;Why Not Both?&#34;&gt;&lt;/a&gt;Why Not Both?&lt;/h2&gt;&lt;p&gt;First, let’s get at the first question the responder asked.  Why wouldn’t I want to have all the qualities of the later and the ability to write code in notepad? Well, it really isn’t a matter of either&amp;#x2F;or.  I think my method actually gets deeper faster.  The place I currently work interviews 10 people for every 1 we hire because most people (9 out of 10) can’t talk knowledgeably about anything they have on their resumes.&lt;/p&gt;
&lt;p&gt;Once we’ve established that they aren’t lying on their resume about their experience, we can be pretty sure they’ve actually written code.  A white board coding interview might be a way of getting at this information.  I just happen to think it is inefficient at best and puts undo stress on a candidate who may otherwise be exactly what you are looking for.  In fact, you’ll notice that the comment says that the whole point of the interview is to have an interaction.  I assure you this can be done by just having a conversation about code.&lt;/p&gt;
&lt;p&gt;Second, unless you state up front that you are only looking for pseudo code and how the candidate thinks, the candidate is going to stress over syntax.  Assuming that he gets it right, it doesn’t necessarily mean that he is an efficient coder.  It only means he’s memorized a lot of syntax and can use it.&lt;/p&gt;
&lt;p&gt;The final statement is where I want to spend most of my time though.  Sorry for so much “ink” to get to the main point, but I wanted to setup the context for you.&lt;/p&gt;
&lt;h2 id=&#34;Decisions-Based-On-10-Minute-Conversation&#34;&gt;&lt;a href=&#34;#Decisions-Based-On-10-Minute-Conversation&#34; class=&#34;headerlink&#34; title=&#34;Decisions Based On 10 Minute Conversation&#34;&gt;&lt;/a&gt;Decisions Based On 10 Minute Conversation&lt;/h2&gt;&lt;p&gt;He states, “I’ve never made a life decision based on a 10 minute conversation …” First, I never said that an interview should only be 10 minutes long.  If the Interview only lasted 10 minutes, that would be a bad sign too.  Although, I don’t think you’d find out anything more useful by taking more than 10 minutes.&lt;/p&gt;
&lt;p&gt;Current research suggest that, no matter which method we use, most of us are hired (or hire) or not within the first 30 seconds.&lt;/p&gt;
&lt;p&gt;The rest of the time we come up with supporting reasons.  The fact of the matter is, by the time you’ve reached the coding interview, the decision has already been made.  This is just a way to justify the decision.&lt;/p&gt;
&lt;p&gt;If you were to study the psychology of sales, you would find that all of us buy based on our emotions and come up with logical reasons why after we’ve already made the decision.  This is why sales literature is aimed at the emotions.  In some way saying, “If you buy this product, you will not have to worry anymore about X”.  Sales pages are constructed the way they are based on this.  I once created a fake sales page using the formula.&lt;/p&gt;
&lt;p&gt;As much as we’d like to think otherwise, we ALL do this.  (And watch the comments come in on that statement!  Bring ‘em on.) And so we come to the final question, what do we mean by “dynamic” and how did this impact the interview.&lt;/p&gt;
&lt;h2 id=&#34;What-Does-“Dynamic”-Mean&#34;&gt;&lt;a href=&#34;#What-Does-“Dynamic”-Mean&#34; class=&#34;headerlink&#34; title=&#34;What Does “Dynamic” Mean?&#34;&gt;&lt;/a&gt;What Does “Dynamic” Mean?&lt;/h2&gt;&lt;p&gt;Well, I’ll tell you.  It’s like this.&lt;/p&gt;
&lt;p&gt;This week I went to a meet-up for ASP.NET and JavaScript developers.  Every person there I talked to was passionate about programming.  It was the easiest group of people I’ve ever mingled with.  Why?  Because they all wanted to talk about code.  They all had opinions.  Some I even disagree with.  But assuming they could agree to the standards at my organization, I would have hired any one of them.  Why?  Because they were “dynamic.” One guy in particular I talked to for several hours.  I knew in the first 10 minutes that he knew what he was doing.  Several hours later, I found some areas we disagreed on.  I never had to look at any code.  The way he talked about coding told me that he could code.  The projects he talked about told me that he could solve problems.  And the fact that he could explain those problems he was solving to me showed me that he could communicate.&lt;/p&gt;
&lt;h2 id=&#34;Cracking-The-Programmer’s-Interview-Code&#34;&gt;&lt;a href=&#34;#Cracking-The-Programmer’s-Interview-Code&#34; class=&#34;headerlink&#34; title=&#34;Cracking The Programmer’s Interview Code&#34;&gt;&lt;/a&gt;Cracking The Programmer’s Interview Code&lt;/h2&gt;&lt;p&gt;And so, to the point of the title.  The way you “Crack the Programmer’s Interview Code” is to be passionate about what you do.  Unfortunately, you can’t fake that if you don’t have a clue about programming in the first place.  Yes, you can grease the skids a bit.  Dress up for the interview.  Don’t smell.  Don’t be a jerk.  Be confident but not arrogant.  Beyond that, winning at the interview may simply be a matter of fit.  You may have to do some sort of code interview.  Or you might decide to skip it because that’s an indication to you that this place won’t be a good fit for you.  And that’s OK.  There are plenty of places to work.  You don’t have to take the first job that pays. You’ll get bonus points if you can walk into the interview already knowing what the pain points are so you can address them.  If you know what they fear, what keeps them up at night, and can show how you are the one who can solve that pain point, you are half way to getting the job. None of these are guarantees.  You may not get the job and it may have nothing to do with you.  One of the things I’m realizing is that the way people react to me has at least as much to do with them as it does with me.  If the guy is having a bad day and&amp;#x2F;or you say or do something that reminds him of something he’s associated with a bad memory, there is no way for you to know that and probably nothing you could do about it if you did.&lt;/p&gt;
</content>
        <category term="programming" />
        <category term="interview" />
        <updated>2015-05-07T10:00:00.000Z</updated>
    </entry>
    <entry>
        <id>http://davembush.github.com/why-programmers-can%E2%80%99t-program/</id>
        <title>Why Programmers Can’t Program</title>
        <link rel="alternate" href="http://davembush.github.com/why-programmers-can%E2%80%99t-program/"/>
        <content type="html">&lt;p&gt;&lt;img src=&#34;/uploads/2010/03/WEST0241.png&#34; alt=&#34;WEST0241&#34; title=&#34;WEST0241&#34;&gt; Jeff Atwood of &lt;a href=&#34;//www.codinghorror.com/blog/2010/02/the-nonprogramming-programmer.html&#34;&gt;Coding Horror&lt;/a&gt; writes:&lt;/p&gt;
&lt;p&gt;“I find it difficult to believe, but the reports keep pouring in via Twitter and email: **many candidates who show up for programming job interviews can’t program. At all.**”&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;p&gt;Jeff, you must not have visited a college campus recently.  The reason most that most “programmers” can’t program is because their instructors led them to believe they could program.&lt;/p&gt;
&lt;p&gt;I have two stories that illustrate the point.&lt;/p&gt;
&lt;p&gt;I do work for a local community college.  The college hired one of their students to work on an ASP.NET project because he was recommended by the professor and because he got all A’s in his programming classes.  The professor told the manager, “this is one of the best students I’ve ever had.”&lt;/p&gt;
&lt;p&gt;Maybe he was the best if you evaluate by his grades, but he sure couldn’t program.  And even if he were to read this, or one of his buddies were to read this and show it to him, I think he’d agree.  He eventually quit and went back to doing what he used to do before he learned how to be a programmer.&lt;/p&gt;
&lt;p&gt;To the school’s credit, they did actually teach current languages.  But that’s where the education stopped.  They taught various programming languages like most of us learned math.  Here’s the formula.  Here’s an exercise that uses the formula.  Nothing in the classes require the student to solve a real-life problem, or even to solve any of the interview problems.&lt;/p&gt;
&lt;p&gt;At the school my daughter goes to, I found the situation even worse.  They have a computer science program but as I was talking to a recent graduate I found out there was no way I’d hire this kid.  I found out because the kid knew he’d been cheated and was freely telling me about it.  So just to find out how bad things were I asked a few questions.&lt;/p&gt;
&lt;p&gt;Turns out, he’d been educated in Java, but he couldn’t tell me what polymorphism was, or when I asked it as, “what is inheritance and how would you use it practically?”  he couldn’t tell me.&lt;/p&gt;
&lt;p&gt;He’d never seen JSP, HTML, or JavaScript either.  What school teaches Java and doesn’t teach those subjects with it?&lt;/p&gt;
&lt;p&gt;One of the commenters suggests that we need government-regulated tests (like that would work any better than any other government-regulated test?)  to help weed out those who can’t program.  While I’m sure there are some great examples of teachers who can program, can teach programming, and care about the quality of programmers they are graduating, I’d suggest changing the education system to weed out the professors who can’t teach, can’t program, and don’t care.  Maybe the certification tests need to go higher than the students we end up interviewing.&lt;/p&gt;
</content>
        <category term="programming" />
        <category term="education" />
        <category term="college" />
        <updated>2010-03-11T12:53:24.000Z</updated>
    </entry>
</feed>
