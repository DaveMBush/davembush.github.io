<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>Dave&#39;s Notebook • Posts by &#34;express&#34; tag</title>
        <link>http://davembush.github.com</link>
        <description></description>
        <language>English</language>
        <pubDate>Thu, 02 Apr 2015 06:00:00 -0400</pubDate>
        <lastBuildDate>Thu, 02 Apr 2015 06:00:00 -0400</lastBuildDate>
        <category>project management</category>
        <category>code coverage</category>
        <category>tdd</category>
        <category>unit test</category>
        <category>code</category>
        <category>programming</category>
        <category>angular</category>
        <category>javascript</category>
        <category>performance</category>
        <category>react.js</category>
        <category>agile</category>
        <category>failure</category>
        <category>kanban</category>
        <category>scrum</category>
        <category>interview</category>
        <category>job search</category>
        <category>test driven development</category>
        <category>mvvm</category>
        <category>DRY</category>
        <category>loose coupling</category>
        <category>single responsibility</category>
        <category>c#</category>
        <category>learning</category>
        <category>bug</category>
        <category>ext js</category>
        <category>sencha</category>
        <category>career</category>
        <category>react</category>
        <category>ngrx</category>
        <category>redux</category>
        <category>functional</category>
        <category>reactive</category>
        <category>mvp</category>
        <category>private</category>
        <category>testing</category>
        <category>typescript</category>
        <category>routing</category>
        <category>pointers</category>
        <category>unsafe</category>
        <category>class diagram</category>
        <category>vb.net</category>
        <category>visual studio</category>
        <category>flux</category>
        <category>lazy loading</category>
        <category>scope</category>
        <category>DOM</category>
        <category>ionic</category>
        <category>putty</category>
        <category>ssh</category>
        <category>formgroup</category>
        <category>validation</category>
        <category>angular-cli</category>
        <category>modules</category>
        <category>ngmodule</category>
        <category>observables</category>
        <category>RxJS</category>
        <category>model driven</category>
        <category>reactive forms</category>
        <category>estimating</category>
        <category>story points</category>
        <category>best practices</category>
        <category>design patterns</category>
        <category>architecture</category>
        <category>asp.net</category>
        <category>memory</category>
        <category>angular.js</category>
        <category>iis</category>
        <category>ajax</category>
        <category>json</category>
        <category>controller</category>
        <category>MVC</category>
        <category>view</category>
        <category>404</category>
        <category>application_error</category>
        <category>exceptions</category>
        <category>viewstate</category>
        <category>archietcture</category>
        <category>bll</category>
        <category>dal</category>
        <category>Three Tiered</category>
        <category>.net</category>
        <category>enums</category>
        <category>tutorial</category>
        <category>code quality</category>
        <category>cyclomatic</category>
        <category>halstead</category>
        <category>child component</category>
        <category>CefSharp</category>
        <category>Chromium</category>
        <category>Vista</category>
        <category>VPN</category>
        <category>xp</category>
        <category>get</category>
        <category>properties</category>
        <category>set</category>
        <category>empty</category>
        <category>string</category>
        <category>habits</category>
        <category>application testing</category>
        <category>dependency injection</category>
        <category>debugging</category>
        <category>cms</category>
        <category>dotnetnuke</category>
        <category>WordPress</category>
        <category>authority</category>
        <category>confidence</category>
        <category>datalist</category>
        <category>listview</category>
        <category>comments</category>
        <category>tdd. agile</category>
        <category>bootstrap</category>
        <category>copy &amp;amp; paste</category>
        <category>cross browser</category>
        <category>idisposable</category>
        <category>animation</category>
        <category>css</category>
        <category>html</category>
        <category>debug</category>
        <category>checked</category>
        <category>double</category>
        <category>float</category>
        <category>int</category>
        <category>long</category>
        <category>short</category>
        <category>unchecked</category>
        <category>currency</category>
        <category>decimal</category>
        <category>floating point math</category>
        <category>single</category>
        <category>authentication</category>
        <category>isinrole</category>
        <category>roles</category>
        <category>user</category>
        <category>definition of done</category>
        <category>DoD</category>
        <category>dispose</category>
        <category>finalize</category>
        <category>suppressfinalize</category>
        <category>education</category>
        <category>client side</category>
        <category>development</category>
        <category>class</category>
        <category>dynamic classing</category>
        <category>gridview</category>
        <category>college</category>
        <category>freshman</category>
        <category>babel</category>
        <category>es2015</category>
        <category>es6</category>
        <category>jest</category>
        <category>bdd</category>
        <category>Single Responsibility</category>
        <category>Architecture</category>
        <category>full stack developer</category>
        <category>web development</category>
        <category>formsauthentication</category>
        <category>manual</category>
        <category>redirectfromloginpage</category>
        <category>setauthcookie</category>
        <category>NgRX</category>
        <category>luck</category>
        <category>social skills</category>
        <category>brain</category>
        <category>health</category>
        <category>programmer</category>
        <category>productivity</category>
        <category>QA</category>
        <category>extreme programming</category>
        <category>software</category>
        <category>httpcontext</category>
        <category>items</category>
        <category>session</category>
        <category>naming conventions</category>
        <category>variables</category>
        <category>self improvement</category>
        <category>301</category>
        <category>302</category>
        <category>fiddler</category>
        <category>infinite loop</category>
        <category>images</category>
        <category>iTextSharp</category>
        <category>PDF</category>
        <category>concatenation</category>
        <category>quirks</category>
        <category>parsing</category>
        <category>xhtml</category>
        <category>fonts</category>
        <category>stack</category>
        <category>htmltidy</category>
        <category>tables</category>
        <category>acrofields</category>
        <category>form fields</category>
        <category>outputstream</category>
        <category>pdfreader</category>
        <category>pdfstamper</category>
        <category>bind</category>
        <category>callbacks</category>
        <category>currying</category>
        <category>events</category>
        <category>business rules</category>
        <category>boolean</category>
        <category>fields</category>
        <category>methods</category>
        <category>object</category>
        <category>functions</category>
        <category>inheritance</category>
        <category>prototype</category>
        <category>hoist</category>
        <category>falsy</category>
        <category>truthy</category>
        <category>istanbul</category>
        <category>jasmine</category>
        <category>hoisting</category>
        <category>types</category>
        <category>type conversion</category>
        <category>dialog</category>
        <category>jQuery</category>
        <category>validation controls</category>
        <category>async</category>
        <category>each</category>
        <category>collapse</category>
        <category>expand</category>
        <category>load</category>
        <category>partial content</category>
        <category>tooltip</category>
        <category>regions</category>
        <category>limiting beliefs</category>
        <category>angular material</category>
        <category>linkedin</category>
        <category>social media</category>
        <category>tips</category>
        <category>CI. Continuous Integration</category>
        <category>magic numbers</category>
        <category>magic strings</category>
        <category>flex</category>
        <category>multiview</category>
        <category>wizard</category>
        <category>threading</category>
        <category>intern</category>
        <category>express</category>
        <category>node</category>
        <category>nunit</category>
        <category>object initializers</category>
        <category>video</category>
        <category>reflection</category>
        <category>unity</category>
        <category>best practice</category>
        <category>asp.net postback button</category>
        <category>iText</category>
        <category>property based testing</category>
        <category>cli</category>
        <category>software architecture</category>
        <category>rxjs. angular 2</category>
        <category>redirect</category>
        <category>response</category>
        <category>responsive design</category>
        <category>parallel</category>
        <category>selenium</category>
        <category>Marble Testing</category>
        <category>java</category>
        <category>grid</category>
        <category>hub</category>
        <category>serialization</category>
        <category>specflow</category>
        <category>like</category>
        <category>sql</category>
        <category>tsql</category>
        <category>where clause</category>
        <category>do while</category>
        <category>for next</category>
        <category>ms-sql</category>
        <category>while</category>
        <category>gamification</category>
        <category>paired programming</category>
        <category>reference types</category>
        <category>stringbuilder</category>
        <category>value types</category>
        <category>technical debt</category>
        <category>activetabindex</category>
        <category>postback</category>
        <category>tab control</category>
        <category>tabcontrol</category>
        <category>kata</category>
        <category>extjs</category>
        <category>email</category>
        <category>mailaddress</category>
        <category>mailmessage</category>
        <category>smtpclient</category>
        <category>Quality</category>
        <category>behavior</category>
        <category>psychology</category>
        <category>portal</category>
        <category>web 1.0</category>
        <category>web 2.0</category>
        <category>trace</category>
        <category>compiler</category>
        <category>errror</category>
        <category>warning</category>
        <category>connection string</category>
        <category>dataset</category>
        <category>error</category>
        <category>web.config</category>
        <category>tslint</category>
        <category>emotions</category>
        <category>hiring</category>
        <category>aspnet_regsql</category>
        <category>forms based authentication</category>
        <category>jsdom</category>
        <category>karma</category>
        <category>noTDD</category>
        <category>bundling</category>
        <category>gulp</category>
        <category>minification</category>
        <category>node.js</category>
        <category>file upload</category>
        <category>objects</category>
        <category>hide</category>
        <category>vb.net attributes</category>
        <category>nothing</category>
        <category>nullable</category>
        <category>conditional startup</category>
        <category>windows forms</category>
        <category>winforms</category>
        <category>char</category>
        <category>split</category>
        <category>strict</category>
        <category>clarity</category>
        <category>ui</category>
        <category>ux</category>
        <category>asmx</category>
        <category>error handling</category>
        <category>webservice</category>
        <category>binary</category>
        <category>bitwise</category>
        <category>operators</category>
        <category>automation</category>
        <category>browser</category>
        <category>mstest</category>
        <category>immutable</category>
        <category>global</category>
        <category>await</category>
        <category>webapi</category>
        <category>configuration</category>
        <category>devops</category>
        <category>testcasedata</category>
        <category>testcasesource</category>
        <category>closure</category>
        <category>loops</category>
        <category>certification</category>
        <category>mcsd</category>
        <category>microsoft</category>
        <category>inversion of control</category>
        <category>ioc</category>
        <category>casting</category>
        <category>convert</category>
        <category>arguements</category>
        <category>command line</category>
        <category>main</category>
        <category>yagni</category>
        <category>npm</category>
        <category>nvm</category>
        <category>resumes</category>
        <category>change-detection</category>
        <category>state-management</category>
        <category>web-workers</category>
        <category>libraries</category>
        <category>strong typing</category>
        <category>linting</category>
        <category>constructors</category>
        <category>clean code</category>
        <category>smart-ngrx</category>
        <category>ngrx-store</category>
        <category>ngrx-entity</category>
        <category>ngrx-effects</category>
        <category>TypeScript</category>
        <category>Performance</category>
        <item>
            <guid isPermalink="true">http://davembush.github.com/node-js-tools-for-visual-studio/</guid>
            <title>Node.js Tools For Visual Studio</title>
            <link>http://davembush.github.com/node-js-tools-for-visual-studio/</link>
            <category>javascript</category>
            <category>express</category>
            <category>node</category>
            <pubDate>Thu, 02 Apr 2015 06:00:00 -0400</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;img src=&#34;/uploads/2015/03/NodeJsInVisualStudioProjectList.png&#34; alt=&#34;NodeJsInVisualStudioProjectList&#34; title=&#34;NodeJsInVisualStudioProjectList&#34;&gt;&lt;/p&gt;
&lt;p&gt;Several weeks ago now, I started learning &lt;a href=&#34;//nodejs.org/&#34;&gt;Node.js&lt;/a&gt;.  Why?  Well, for a couple of reasons.  First, all the cool kids are using Node.js.  Second, I wanted to use &lt;a href=&#34;//gotwarlost.github.io/istanbul/&#34;&gt;Istanbul&lt;/a&gt; to get an idea of how well my javascript code is covered by test and that runs under Node.js.  Third, &lt;a href=&#34;//blogs.msdn.com/b/webdev/archive/2015/03/19/customize-external-web-tools-in-visual-studio-2015.aspx&#34;&gt;Node.js is going to show up in the next version of Visual Studio&lt;/a&gt;.  And finally, I just like to learn new stuff.&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;h2 id=&#34;Node-JS&#34;&gt;&lt;a href=&#34;#Node-JS&#34; class=&#34;headerlink&#34; title=&#34;Node.JS&#34;&gt;&lt;/a&gt;Node.JS&lt;/h2&gt;&lt;p&gt;So, I started by installing node and just working in Visual Studio as though my node project was a web site.  It works, but it isn’t pretty.  But it did get me familiar with some basic concepts like using the node package manager (npm) to install what I needed to get Istanbul running.  For those of you who aren’t familiar with npm, it is basically NuGet for node.js.&lt;/p&gt;
&lt;h2 id=&#34;Istanbul-JavaScript-Code-Coverage&#34;&gt;&lt;a href=&#34;#Istanbul-JavaScript-Code-Coverage&#34; class=&#34;headerlink&#34; title=&#34;Istanbul JavaScript Code Coverage&#34;&gt;&lt;/a&gt;Istanbul JavaScript Code Coverage&lt;/h2&gt;&lt;p&gt;For those of you who are interested, I used the instructions &lt;a href=&#34;//ariya.ofilabs.com/2013/10/code-coverage-of-jasmine-tests-using-istanbul-and-karma.html&#34;&gt;here&lt;/a&gt; for getting Istanbul working locally.  They should probably be updated because the example there doesn’t have a good configuration example.  I filled in the rest of what I needed to know from the &lt;a href=&#34;//karma-runner.github.io/0.12/&#34;&gt;Karma site&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;Node-for-Visual-Studio&#34;&gt;&lt;a href=&#34;#Node-for-Visual-Studio&#34; class=&#34;headerlink&#34; title=&#34;Node for Visual Studio&#34;&gt;&lt;/a&gt;Node for Visual Studio&lt;/h2&gt;&lt;p&gt;So then I had heard that work was being done on a plugin for Visual Studio 2013 that would allow me to work on Node projects from within Visual Studio.  I found out about this first from &lt;a href=&#34;//www.hanselman.com/blog/IntroducingNodejsToolsForVisualStudio.aspx&#34;&gt;Scott Hanselman’s blog&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;So I went  to the &lt;a href=&#34;//nodejstools.codeplex.com/&#34;&gt;plugin site&lt;/a&gt; and got the download and installed it.  This is all pretty straight forward.  Don’t forget, you’ll ALSO need to install node.  So, don’t forget that step.&lt;/p&gt;
&lt;p&gt;OK.  Now that you have the NTVS installed (that’s what they call the plugin) what do you have? Well, you have several new project templates that you can use.  That’s what.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/uploads/2015/03/NodeJsInVisualStudioProjectList1.png&#34; alt=&#34;NodeJsInVisualStudioProjectList&#34; title=&#34;NodeJsInVisualStudioProjectList&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;Interactive-JavaScript&#34;&gt;&lt;a href=&#34;#Interactive-JavaScript&#34; class=&#34;headerlink&#34; title=&#34;Interactive JavaScript&#34;&gt;&lt;/a&gt;Interactive JavaScript&lt;/h2&gt;&lt;p&gt;But that’s not all you get, you also get an interactive Node.js window that you can get to from the Tools menu (Tools –&amp;gt; Node.js Tools –&amp;gt; Node.js Interactive window) or by pressing the keyboard shortcut, Ctrl+K, N.  Inside this window you can execute JavaScript on the fly: &lt;img src=&#34;/uploads/2015/03/NodeJsInteractiveWindow.png&#34; alt=&#34;NodeJsInteractiveWindow&#34; title=&#34;NodeJsInteractiveWindow&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;Node-Package-Manager-in-Visual-Studio&#34;&gt;&lt;a href=&#34;#Node-Package-Manager-in-Visual-Studio&#34; class=&#34;headerlink&#34; title=&#34;Node Package Manager in Visual Studio&#34;&gt;&lt;/a&gt;Node Package Manager in Visual Studio&lt;/h2&gt;&lt;p&gt;Or install other node packages:&lt;/p&gt;
&lt;p&gt;.npm install yourPackageNameHere&lt;/p&gt;
&lt;p&gt;Don’t forget the leading period.  That’s the indication to the window that it needs to do something different from executing javascript in the window.&lt;/p&gt;
&lt;p&gt;Even as I’m writing this, I’m seeing that there is a lot more here than I’m actually telling you now.&lt;/p&gt;
&lt;h2 id=&#34;Starting-a-New-Project&#34;&gt;&lt;a href=&#34;#Starting-a-New-Project&#34; class=&#34;headerlink&#34; title=&#34;Starting a New Project&#34;&gt;&lt;/a&gt;Starting a New Project&lt;/h2&gt;&lt;p&gt;Now, the best way of learning something is by creating some kind of product.  Even if it is for your own use.  So, the next thing I did was to try to create a project.  I have a specific project in mind that should use MongoDB for the database (I’ve been meaning to learn NoSQL for a while now) and since Express seems to come with NTVS, I guess I’ll use that for my web server.  Oh and Angular for the front end.&lt;/p&gt;
&lt;p&gt;Since I was creating a web site, I thought, I should create a new web project that uses node.  In fact, it shows up  in the list of web sites types that you can create.  However, I got an error when I did that, and I don’t see anything in the documentation that says I should be able to use those templates or that I need anything extra to use them.&lt;/p&gt;
&lt;p&gt;However, if you use the project options, you can create a web application.  I decided going with newer is better than older, so I’ve created a “Basic Node.js Express 4 Application”.&lt;/p&gt;
&lt;h2 id=&#34;The-Fun-Is-Just-Beginning&#34;&gt;&lt;a href=&#34;#The-Fun-Is-Just-Beginning&#34; class=&#34;headerlink&#34; title=&#34;The Fun Is Just Beginning&#34;&gt;&lt;/a&gt;The Fun Is Just Beginning&lt;/h2&gt;&lt;p&gt;And now, this is where the fun begins.  Where’s my HTML?  What’s all this “template” stuff?  And how do I install Angular?  Or do I do that manually since it isn’t a server side thing? So much to learn.  But, that’s for another post.&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
