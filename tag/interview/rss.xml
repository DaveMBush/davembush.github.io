<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>Dave&#39;s Notebook • Posts by &#34;interview&#34; tag</title>
        <link>http://davembush.github.com</link>
        <description></description>
        <language>English</language>
        <pubDate>Sat, 01 Sep 2018 06:30:33 -0400</pubDate>
        <lastBuildDate>Sat, 01 Sep 2018 06:30:33 -0400</lastBuildDate>
        <category>project management</category>
        <category>code coverage</category>
        <category>tdd</category>
        <category>unit test</category>
        <category>code</category>
        <category>programming</category>
        <category>angular</category>
        <category>javascript</category>
        <category>performance</category>
        <category>react.js</category>
        <category>agile</category>
        <category>failure</category>
        <category>kanban</category>
        <category>scrum</category>
        <category>interview</category>
        <category>job search</category>
        <category>test driven development</category>
        <category>mvvm</category>
        <category>DRY</category>
        <category>loose coupling</category>
        <category>single responsibility</category>
        <category>c#</category>
        <category>learning</category>
        <category>bug</category>
        <category>ext js</category>
        <category>sencha</category>
        <category>career</category>
        <category>react</category>
        <category>ngrx</category>
        <category>redux</category>
        <category>functional</category>
        <category>reactive</category>
        <category>mvp</category>
        <category>private</category>
        <category>testing</category>
        <category>typescript</category>
        <category>routing</category>
        <category>pointers</category>
        <category>unsafe</category>
        <category>class diagram</category>
        <category>vb.net</category>
        <category>visual studio</category>
        <category>flux</category>
        <category>lazy loading</category>
        <category>scope</category>
        <category>DOM</category>
        <category>ionic</category>
        <category>putty</category>
        <category>ssh</category>
        <category>formgroup</category>
        <category>validation</category>
        <category>angular-cli</category>
        <category>modules</category>
        <category>ngmodule</category>
        <category>observables</category>
        <category>RxJS</category>
        <category>model driven</category>
        <category>reactive forms</category>
        <category>estimating</category>
        <category>story points</category>
        <category>best practices</category>
        <category>design patterns</category>
        <category>architecture</category>
        <category>asp.net</category>
        <category>memory</category>
        <category>angular.js</category>
        <category>iis</category>
        <category>ajax</category>
        <category>json</category>
        <category>controller</category>
        <category>MVC</category>
        <category>view</category>
        <category>404</category>
        <category>application_error</category>
        <category>exceptions</category>
        <category>viewstate</category>
        <category>archietcture</category>
        <category>bll</category>
        <category>dal</category>
        <category>Three Tiered</category>
        <category>.net</category>
        <category>enums</category>
        <category>tutorial</category>
        <category>code quality</category>
        <category>cyclomatic</category>
        <category>halstead</category>
        <category>child component</category>
        <category>CefSharp</category>
        <category>Chromium</category>
        <category>Vista</category>
        <category>VPN</category>
        <category>xp</category>
        <category>get</category>
        <category>properties</category>
        <category>set</category>
        <category>empty</category>
        <category>string</category>
        <category>habits</category>
        <category>application testing</category>
        <category>dependency injection</category>
        <category>debugging</category>
        <category>cms</category>
        <category>dotnetnuke</category>
        <category>WordPress</category>
        <category>authority</category>
        <category>confidence</category>
        <category>datalist</category>
        <category>listview</category>
        <category>comments</category>
        <category>tdd. agile</category>
        <category>bootstrap</category>
        <category>copy &amp;amp; paste</category>
        <category>cross browser</category>
        <category>idisposable</category>
        <category>animation</category>
        <category>css</category>
        <category>html</category>
        <category>debug</category>
        <category>checked</category>
        <category>double</category>
        <category>float</category>
        <category>int</category>
        <category>long</category>
        <category>short</category>
        <category>unchecked</category>
        <category>currency</category>
        <category>decimal</category>
        <category>floating point math</category>
        <category>single</category>
        <category>authentication</category>
        <category>isinrole</category>
        <category>roles</category>
        <category>user</category>
        <category>definition of done</category>
        <category>DoD</category>
        <category>dispose</category>
        <category>finalize</category>
        <category>suppressfinalize</category>
        <category>education</category>
        <category>client side</category>
        <category>development</category>
        <category>class</category>
        <category>dynamic classing</category>
        <category>gridview</category>
        <category>college</category>
        <category>freshman</category>
        <category>babel</category>
        <category>es2015</category>
        <category>es6</category>
        <category>jest</category>
        <category>bdd</category>
        <category>Single Responsibility</category>
        <category>Architecture</category>
        <category>full stack developer</category>
        <category>web development</category>
        <category>formsauthentication</category>
        <category>manual</category>
        <category>redirectfromloginpage</category>
        <category>setauthcookie</category>
        <category>NgRX</category>
        <category>luck</category>
        <category>social skills</category>
        <category>brain</category>
        <category>health</category>
        <category>programmer</category>
        <category>productivity</category>
        <category>QA</category>
        <category>extreme programming</category>
        <category>software</category>
        <category>httpcontext</category>
        <category>items</category>
        <category>session</category>
        <category>naming conventions</category>
        <category>variables</category>
        <category>self improvement</category>
        <category>301</category>
        <category>302</category>
        <category>fiddler</category>
        <category>infinite loop</category>
        <category>images</category>
        <category>iTextSharp</category>
        <category>PDF</category>
        <category>concatenation</category>
        <category>quirks</category>
        <category>parsing</category>
        <category>xhtml</category>
        <category>fonts</category>
        <category>stack</category>
        <category>htmltidy</category>
        <category>tables</category>
        <category>acrofields</category>
        <category>form fields</category>
        <category>outputstream</category>
        <category>pdfreader</category>
        <category>pdfstamper</category>
        <category>bind</category>
        <category>callbacks</category>
        <category>currying</category>
        <category>events</category>
        <category>business rules</category>
        <category>boolean</category>
        <category>fields</category>
        <category>methods</category>
        <category>object</category>
        <category>functions</category>
        <category>inheritance</category>
        <category>prototype</category>
        <category>hoist</category>
        <category>falsy</category>
        <category>truthy</category>
        <category>istanbul</category>
        <category>jasmine</category>
        <category>hoisting</category>
        <category>types</category>
        <category>type conversion</category>
        <category>dialog</category>
        <category>jQuery</category>
        <category>validation controls</category>
        <category>async</category>
        <category>each</category>
        <category>collapse</category>
        <category>expand</category>
        <category>load</category>
        <category>partial content</category>
        <category>tooltip</category>
        <category>regions</category>
        <category>limiting beliefs</category>
        <category>angular material</category>
        <category>linkedin</category>
        <category>social media</category>
        <category>tips</category>
        <category>CI. Continuous Integration</category>
        <category>magic numbers</category>
        <category>magic strings</category>
        <category>flex</category>
        <category>multiview</category>
        <category>wizard</category>
        <category>threading</category>
        <category>intern</category>
        <category>express</category>
        <category>node</category>
        <category>nunit</category>
        <category>object initializers</category>
        <category>video</category>
        <category>reflection</category>
        <category>unity</category>
        <category>best practice</category>
        <category>asp.net postback button</category>
        <category>iText</category>
        <category>property based testing</category>
        <category>cli</category>
        <category>software architecture</category>
        <category>rxjs. angular 2</category>
        <category>redirect</category>
        <category>response</category>
        <category>responsive design</category>
        <category>parallel</category>
        <category>selenium</category>
        <category>Marble Testing</category>
        <category>java</category>
        <category>grid</category>
        <category>hub</category>
        <category>serialization</category>
        <category>specflow</category>
        <category>like</category>
        <category>sql</category>
        <category>tsql</category>
        <category>where clause</category>
        <category>do while</category>
        <category>for next</category>
        <category>ms-sql</category>
        <category>while</category>
        <category>gamification</category>
        <category>paired programming</category>
        <category>reference types</category>
        <category>stringbuilder</category>
        <category>value types</category>
        <category>technical debt</category>
        <category>activetabindex</category>
        <category>postback</category>
        <category>tab control</category>
        <category>tabcontrol</category>
        <category>kata</category>
        <category>extjs</category>
        <category>email</category>
        <category>mailaddress</category>
        <category>mailmessage</category>
        <category>smtpclient</category>
        <category>Quality</category>
        <category>behavior</category>
        <category>psychology</category>
        <category>portal</category>
        <category>web 1.0</category>
        <category>web 2.0</category>
        <category>trace</category>
        <category>compiler</category>
        <category>errror</category>
        <category>warning</category>
        <category>connection string</category>
        <category>dataset</category>
        <category>error</category>
        <category>web.config</category>
        <category>tslint</category>
        <category>emotions</category>
        <category>hiring</category>
        <category>aspnet_regsql</category>
        <category>forms based authentication</category>
        <category>jsdom</category>
        <category>karma</category>
        <category>noTDD</category>
        <category>bundling</category>
        <category>gulp</category>
        <category>minification</category>
        <category>node.js</category>
        <category>file upload</category>
        <category>objects</category>
        <category>hide</category>
        <category>vb.net attributes</category>
        <category>nothing</category>
        <category>nullable</category>
        <category>conditional startup</category>
        <category>windows forms</category>
        <category>winforms</category>
        <category>char</category>
        <category>split</category>
        <category>strict</category>
        <category>clarity</category>
        <category>ui</category>
        <category>ux</category>
        <category>asmx</category>
        <category>error handling</category>
        <category>webservice</category>
        <category>binary</category>
        <category>bitwise</category>
        <category>operators</category>
        <category>automation</category>
        <category>browser</category>
        <category>mstest</category>
        <category>immutable</category>
        <category>global</category>
        <category>await</category>
        <category>webapi</category>
        <category>configuration</category>
        <category>devops</category>
        <category>testcasedata</category>
        <category>testcasesource</category>
        <category>closure</category>
        <category>loops</category>
        <category>certification</category>
        <category>mcsd</category>
        <category>microsoft</category>
        <category>inversion of control</category>
        <category>ioc</category>
        <category>casting</category>
        <category>convert</category>
        <category>arguements</category>
        <category>command line</category>
        <category>main</category>
        <category>yagni</category>
        <category>npm</category>
        <category>nvm</category>
        <category>resumes</category>
        <category>change-detection</category>
        <category>state-management</category>
        <category>web-workers</category>
        <category>libraries</category>
        <category>strong typing</category>
        <category>linting</category>
        <category>constructors</category>
        <category>clean code</category>
        <category>smart-ngrx</category>
        <category>ngrx-store</category>
        <category>ngrx-entity</category>
        <category>ngrx-effects</category>
        <category>TypeScript</category>
        <category>Performance</category>
        <item>
            <guid isPermalink="true">http://davembush.github.com/the-tyranny-of-emotions/</guid>
            <title>The Tyranny of Emotions</title>
            <link>http://davembush.github.com/the-tyranny-of-emotions/</link>
            <category>interview</category>
            <category>health</category>
            <category>emotions</category>
            <category>hiring</category>
            <pubDate>Sat, 01 Sep 2018 06:30:33 -0400</pubDate>
            <description><![CDATA[ &lt;p&gt;Emotions are a weird element of being human.  They can propel us forward or hold us back.  Sometimes they are violent.  Most of the time they whisper. &lt;/p&gt;
&lt;p&gt;Several events have occurred recently that have me thinking about this more. &lt;/p&gt;
&lt;p&gt;To start with, I’ve started paying more attention to my health.  There were a lot of things holding me back from this in the past.  It turns out, most of what was holding me back was just a lie. &lt;/p&gt;
&lt;p&gt;I’ve started interviewing again.  The nature of what I do means I get to do this a lot.  You’d think I’d get used to it.  But, I don’t like the interview process.  I don’t like changing jobs.  I really don’t like code interviews.  But, I do them because I like to program for a living.&lt;/p&gt;
&lt;p&gt;And for those of you who know me, just because I’m interviewing doesn’t mean I don’t like where I am and have any intention of leaving.  I interview when I have work so I still have the skill when I don’t have work.  And who knows?  I may just find something I like better than where I am.&lt;/p&gt;
&lt;p&gt;Some of the interviews I’ve been on have revealed that managers think in similar short-term ways that I have.  Short-term thinking is so easy to see when it is someone else. &lt;figure&gt;&lt;img src=&#34;/uploads/2017/08/2017-08-19.png&#34; title=&#34;The Tyranny of Emotions&#34;&gt;&lt;figcaption&gt;Photo credit: &lt;a href=&#34;//www.flickr.com/photos/whinmobzappmedia/16016836686/&#34;&gt;whinmobzappmedia&lt;/a&gt; via &lt;a href=&#34;//visualhunt.com/re/fb1f6a&#34;&gt;VisualHunt&lt;/a&gt; &amp;#x2F; &lt;a href=&#34;//creativecommons.org/licenses/by/2.0/&#34;&gt; CC BY&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;h2 id=&#34;Health&#34;&gt;&lt;a href=&#34;#Health&#34; class=&#34;headerlink&#34; title=&#34;Health&#34;&gt;&lt;/a&gt;Health&lt;/h2&gt;&lt;p&gt;I was under the misconception that if I paid more attention to my health, it would take time away from things I would rather be doing.  As it turns out, paying attention to my health has more than made up for the time it has taken. &lt;/p&gt;
&lt;p&gt;I was “afraid” of being uncomfortable.  I admit it.  I’m generally a pain wimp.  I wasn’t looking forward to sweating.  But it turns out, you get use to stuff like that. &lt;/p&gt;
&lt;p&gt;Now, the question to ask here is, “what was it that was keeping me from trying and what was it that got me started?” &lt;/p&gt;
&lt;p&gt;In a word, fear.  I was afraid I was going to lose the ability to do things that I considered more fun.  I was afraid of the discomfort. &lt;/p&gt;
&lt;p&gt;Now, the thing that got me started was slowly being exposed to the many benefits of living a slightly healthier life style.  I can’t say when exactly I started thinking I might want to make some changes, but I can tell you the first step was asking myself, “what can I do that is sustainable?” &lt;/p&gt;
&lt;p&gt;I’ve learned, “what can I do?” is the best question I can ask when all that is being offered are reasons why something can’t happen. &lt;/p&gt;
&lt;p&gt;It turns out, the answer to that question was, “if you got a tread mill, you could start walking every morning in the comfort of your own home.  You wouldn’t have to go outside when it is too hot or too cold.” &lt;/p&gt;
&lt;p&gt;I’ve also learned that walking every morning is a medically proven way to reduce the chances of getting cancer, reduce cholesterol, lower my resting heart rate, improve my confidence, improve brain function, reduce depression and help me sleep better. With all of those benefits, why wouldn’t I walk every morning? &lt;/p&gt;
&lt;p&gt;Prior to starting to walk every morning, I had already started to focus on my diet.  I’m not particularly over-weight.  I’m just over-weight for me.  So, I started on a high fat diet.  &lt;/p&gt;
&lt;p&gt;Lately, I’ve worked in MCT oil, some super food supplements as well as some magnesium oil, and reduced my caffeine intake to the first two hours of my day.  Between this and the walking, I actually have more time in my day and I don’t feel nearly as tired by the end of the work day as I had been. &lt;/p&gt;
&lt;p&gt;Now, the more I focus on my health, the more I want to focus on my health because I’ve found that most of the stuff holding me back from even starting were lies and half-truths.  Not to mention momentum and addictions to unhealthy foods. &lt;/p&gt;
&lt;p&gt;Here’s a super tip for anyone who is interested in this stuff.  Diet isn’t about will power.  If you are playing the will-power game, you are going to lose.  Your current life-style is formed on food addictions (with the help of food companies) emotions and occasionally the belief that you can’t afford to eat healthy.  The dirty little secret is, if you eat healthy and figure out what the emotional triggers are, the addictions practically take care of themselves.&lt;/p&gt;
&lt;h2 id=&#34;Interviewing&#34;&gt;&lt;a href=&#34;#Interviewing&#34; class=&#34;headerlink&#34; title=&#34;Interviewing&#34;&gt;&lt;/a&gt;Interviewing&lt;/h2&gt;&lt;p&gt;I’ve been a contract programmer most of my career.  By definition, most of the places I’ve worked have been about a year and a half long and then I move on.  There are exceptions, but that is the general rule.  And let’s just say that my career has been nice and long.  So, you’d think at some point I would get used to interviewing and switching jobs. &lt;/p&gt;
&lt;p&gt;But I haven’t.  I’ve never liked new.  And, every job is new.  Every interview is new. &lt;/p&gt;
&lt;p&gt;I think the thing I dislike the most is that interviewing is a game that I don’t think anyone has figured out.  The strong temptation is to tell the person interviewing you what you think they want to hear.  I’ve found I do better if I tell them what I actually believe. If they don’t like the answer, I figure I probably wouldn’t be happy working there anyhow.&lt;/p&gt;
&lt;p&gt;And then there is the code interview.  I’ve talked about this several times on this blog before.  I still don’t think it is a good measure of what I can bring to an organization.  But, with all of the “programmers” who can’t do the simple stuff, I acknowledge they are probably necessary. &lt;/p&gt;
&lt;p&gt;Now, the problem with code interviews is that they are “test” constructed by other programmers, not by a professional testing organization.  This means that the first thing I have to figure out about the question is, “what are you really asking me?”  Also, you can never be quite sure what they are testing for.  Do they just want to see that you can solve the problem?  Do they have a particular implementation they are expecting from you?  Do they care about the answer at all and they are just using the code portion of the interview to weed out people who can’t code at all?  And if they are looking for a particular answer, how can they be so sure they have the “right” answer and that my answer is “wrong?”&lt;/p&gt;
&lt;p&gt;As an example, I was once asked how .NET memory management works.  The official answer is, “there is nothing in the .NET specification that says how it should work at all.”  But, the way it has been implemented in Windows is typically the answer people are looking for.  I’ve learned the best answer is the full answer.  Then again, why is this something anyone cares about.  Memory gets managed.  That should be all you really need to know. &lt;/p&gt;
&lt;p&gt;With all of these problems, why do I continue on? &lt;/p&gt;
&lt;p&gt;Well, as I’ve mentioned in other post, hopefully, I’ll learn something with each interview.  I’ll either learn something about myself, or I’ll learn some bit of programming that I still need to work on. &lt;/p&gt;
&lt;p&gt;And, the growth experience of doing something hard has benefit too.  If I avoid hard stuff, I learn that hard stuff is bad.  If I do hard stuff, I learn that hard stuff is just hard.  It won’t kill me.  Besides, I can’t even say what it is about new stuff that scares me.  It is just that feeling.  And I need to silence that lizard.  This is one reason why I believe in interviewing even if you have a job. &lt;/p&gt;
&lt;p&gt;I’ve worked with people in the past who won’t do code interviews.  They say things like, “I have thirty years of experience, if that’s not good enough for you, I don’t want to work for you.”  And I get it.  But I think secretly, they’re afraid of doing the interview.  I always ask, “why not just do the interview?  The worse that can happen is you don’t get the gig, and you might learn something in the process.”&lt;/p&gt;
&lt;h2 id=&#34;Hiring-Managers&#34;&gt;&lt;a href=&#34;#Hiring-Managers&#34; class=&#34;headerlink&#34; title=&#34;Hiring Managers&#34;&gt;&lt;/a&gt;Hiring Managers&lt;/h2&gt;&lt;p&gt;I’ve hit this one at several levels.  Mostly I deal with recruiters.  Most of the recruiters I deal with are just looking for warm bodies.  Having dealt with them on both ends, as a person conducting interviews and as the one looking for work, I can tell you the market is saturated with the “any warm body” variety of recruiter. I’ve started filtering out the “any warm body” recruiters from my email and only work with recruiters that work with companies that are looking for programmers at a level above that.&lt;/p&gt;
&lt;p&gt;I hit this in full force this week when I did a phone interview with a lady who works for a company that has a pool of remote developers who work on their client’s programs.  So when we started talking about rate I found out that they pay everyone the same because it makes the math easier for the owner. I don’t know about you but that sounds short sighted at best and like slave labor at its worse.&lt;/p&gt;
&lt;p&gt;I’ve interviewed at other places where they seemed more concerned with what they would have me work on than IF they wanted to hire me. &lt;/p&gt;
&lt;p&gt;I get that the hiring process is difficult, and figuring out my worth might be difficult.  But, let’s take a look at this for a bit. &lt;/p&gt;
&lt;p&gt;Let’s just say you have 10 programmers who you pay $100K a year each.  You are interviewing someone who can demonstrate that they are twice as productive AND that they’ll be able to improve the productivity of everyone else you already have by at least 10% simply by being on your team, mentoring your existing staff, and implementing process improvements to your organization.  How much value does this 11th programmer possess?  Simple math would indicate at least $200K. &lt;/p&gt;
&lt;p&gt;So, fear holds us back, does it not?  All we hear is that this programmer is asking for a salary that is 1.5 times as much as what you’re paying everyone else and think, “I can’t afford that.”  The reality is, you probably can’t afford to NOT hire them. &lt;/p&gt;
&lt;p&gt;Imagine if you found a diamond mine in a field that was worth $1,000,000 and the land you found the mine in was being sold for $700,000 wouldn’t you find some way to buy the field? &lt;/p&gt;
&lt;p&gt;Maybe you don’t have $700,000.  And you think, “I can’t afford that.”  But isn’t a better question, “how can I afford that?”&lt;/p&gt;
&lt;h2 id=&#34;Conclusion&#34;&gt;&lt;a href=&#34;#Conclusion&#34; class=&#34;headerlink&#34; title=&#34;Conclusion&#34;&gt;&lt;/a&gt;Conclusion&lt;/h2&gt;&lt;p&gt;So, my challenge this week is, “Don’t let fear hold you back.” &lt;/p&gt;
&lt;p&gt;Look for a way.  Stop listening to the whispers in your head telling you something can’t be done. &lt;/p&gt;
&lt;p&gt;Do something hard today and improve by 1%.&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://davembush.github.com/secrets-to-your-first-programming-job/</guid>
            <title>Secrets to Your First Programming Job</title>
            <link>http://davembush.github.com/secrets-to-your-first-programming-job/</link>
            <category>interview</category>
            <category>job search</category>
            <pubDate>Sat, 13 May 2017 12:47:50 -0400</pubDate>
            <description><![CDATA[ &lt;p&gt;This past week I was talking to a guy who is graduating from College and looking for a job. He asked me what most people ask at that point in their career. “Everyone wants experience, but how do you get experience if no one will give it to you?”&lt;/p&gt;
&lt;p&gt;What is interesting is that for all the advances in the 30 years since I started my career, that question is still the main question every graduate asks.&lt;/p&gt;
&lt;p&gt;Now, before I get started, I want to make sure we are clear. These tips may or may not work for you. They are what I would do, and in large part are what I did 30 years ago, just updated to be appropriate to the current technology. How well they work for you are going to depend on a lot of different factors, not least of which is how much effort you apply. They are also very much based on my culture here in the USA. If you are looking for a job in another country that is dissimilar culturally, you may want to ignore this advice completely. But, I’ll also say this. If what you are currently doing isn’t working, what do you have to lose?&lt;/p&gt;
&lt;figure&gt;![](/uploads/2017/05/2017-05-13.png)&lt;figcaption&gt;Photo credit: [MDGovpics](//www.flickr.com/photos/mdgovpics/8157677890/) via [Visualhunt.com](//visualhunt.com/re/abeb67) / [ CC BY](//creativecommons.org/licenses/by/2.0/)&lt;/figcaption&gt;&lt;/figure&gt;

&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;


&lt;h2 id=&#34;Get-a-Job&#34;&gt;&lt;a href=&#34;#Get-a-Job&#34; class=&#34;headerlink&#34; title=&#34;Get a Job&#34;&gt;&lt;/a&gt;Get a Job&lt;/h2&gt;&lt;p&gt;Wait! Wasn’t the whole point of this article to help you find a job? No! The point of this article is help you get a Programming job. And the first step in the process is to get A job. Any job. Don’t be picky. When I started my career, I was working in the Sporting Goods and Automotive department at K-Mart. Minimum wage. Nothing to write home about. Prior to that I worked as a maintenance man.&lt;/p&gt;
&lt;p&gt;Listen, I know you want a job in whatever it was you went to school for. But the fact of the matter is, you have college bills to pay off. You probably have a car that needs gas and insurance. You may even have rent and groceries. If Mom and Dad are taking care of all that for you, shame on them! And shame on you for letting them, no matter how easy that makes life. Cut the cord and grow up!&lt;/p&gt;
&lt;p&gt;OK, enough on that rant. If I can’t convince you on the financial terms, let me try a couple other really good reasons.&lt;/p&gt;
&lt;p&gt;First, the fact of the matter is, no one wants to be the first one to take a chance on you.  If you don’t currently have a job that you’ve been able to hold for a while, how can I be sure that you will work out?  Even if you have all the credentials I’m looking for, will you stick around when things get hard?  Getting a job, particularly a crappy job, shows that you are a worker.  That nothing is beneath you.  And trust me, with all the stories about how millennials are lazy and want the world handed to them (even if that isn’t totally accurate) you can bet someone who is working for minimum wage at a job that don’t particularly like is going to stand out.&lt;/p&gt;
&lt;h2 id=&#34;Your-Job-is-Getting-a-Job&#34;&gt;&lt;a href=&#34;#Your-Job-is-Getting-a-Job&#34; class=&#34;headerlink&#34; title=&#34;Your Job is Getting a Job&#34;&gt;&lt;/a&gt;Your Job is Getting a Job&lt;/h2&gt;&lt;p&gt;Until you have a job of some kind, your job is getting a job. The harder you work at getting a job, the faster you will get the job you want. This means you should have a list of things you can do today that will get you closer to landing a job.  Work on your resume. Implement some of the tips below. Apply for any and every job that is open.  Go door to door if you have to.&lt;/p&gt;
&lt;p&gt;Once you’ve finished reading this article, make a list and work through it.&lt;/p&gt;
&lt;h2 id=&#34;It’s-a-Numbers-Game&#34;&gt;&lt;a href=&#34;#It’s-a-Numbers-Game&#34; class=&#34;headerlink&#34; title=&#34;It’s a Numbers Game&#34;&gt;&lt;/a&gt;It’s a Numbers Game&lt;/h2&gt;&lt;p&gt;Now here is a very sad truth. Getting that first job is a numbers game. You are going to apply to a lot of places before anyone hires you. And the thing your college won’t tell you as they prepare you to get out into the real world is just how much work this is going to be.&lt;/p&gt;
&lt;p&gt;When I was your age…&lt;/p&gt;
&lt;p&gt;…we just had the newspaper. I sent my resume to anyone and everyone that looked like they might have a programming job available.&lt;/p&gt;
&lt;p&gt;In your case, you are going to make sure you are as visible as possible. Post your resume on job boards. Apply to every company that has an open computer job, even if you don’t qualify for the one they advertised. Ask your friends if they know anyone who might be able to help.&lt;/p&gt;
&lt;p&gt;Note: I said, “might be able to help.” Not, “might be able to get you a job.” I’ll talk more about this later. But HOW you ask for help plays a HUGE part in being able to GET help.&lt;/p&gt;
&lt;p&gt;When someone ask you what you do, the answer is, “Well, actually, right now I’m trying to find a job as a ______ do you know anyone who might be able to help?”&lt;/p&gt;
&lt;p&gt;It is the whole networking thing.&lt;/p&gt;
&lt;p&gt;Allow me to tell you a story. When I graduated, this was the exact line I used. “Do you know anyone who might be able to help?” And when I contacted the person I was referred to, I asked the same question. Typically, the letter I sent looked something like this:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Dear sir, I just graduated from such and such college&amp;#x2F;university. My degree is in X and I’m trying to find work.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;I was speaking with John Doe who suggested that I contact you. I realize you may or may not have anything for me, but I was hoping you might be able to suggest some people who might be able to help me find an entry level programming position.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Thanks for any help you can give me.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;Your-Degree-isn’t-Primary&#34;&gt;&lt;a href=&#34;#Your-Degree-isn’t-Primary&#34; class=&#34;headerlink&#34; title=&#34;Your Degree isn’t Primary&#34;&gt;&lt;/a&gt;Your Degree isn’t Primary&lt;/h2&gt;&lt;p&gt;I know your degree is probably all you feel like you have. But mostly, no one cares. Oh, we care that you have a degree, but that is about all.&lt;/p&gt;
&lt;p&gt;What do we care about?&lt;/p&gt;
&lt;p&gt;What can you do?&lt;/p&gt;
&lt;p&gt;Now, what you need to do is think outside the box. When you put your resume together, you are going to put anything on your resume that is remotely related to the kind of job you are trying to get. Even if you did it for free.&lt;/p&gt;
&lt;p&gt;The next best thing you can do is to put something on your resume that indicates you are a go-getter. Did you have any leadership roles in college? Make sure that gets on your resume! Have you done a lot of volunteer work?&lt;/p&gt;
&lt;h2 id=&#34;Dress-Up&#34;&gt;&lt;a href=&#34;#Dress-Up&#34; class=&#34;headerlink&#34; title=&#34;Dress Up&#34;&gt;&lt;/a&gt;Dress Up&lt;/h2&gt;&lt;p&gt;Really! This shouldn’t need to be said. But unless you are told otherwise ahead of time, you never get in trouble for dressing up for an interview. But nothing will kill it faster if you don’t. Yes, even in this modern day and age. Even if the organization sells itself as a casual organization, dress in business attire. Guys, this means where a suit. Gals, let’s face it, I doubt you’ll have any problem with this.&lt;/p&gt;
&lt;h2 id=&#34;LinkedIn&#34;&gt;&lt;a href=&#34;#LinkedIn&#34; class=&#34;headerlink&#34; title=&#34;LinkedIn&#34;&gt;&lt;/a&gt;LinkedIn&lt;/h2&gt;&lt;p&gt;I wrote about &lt;a href=&#34;/linkedin-tips-for-programmers/&#34;&gt;my LinkedIn strategy&lt;/a&gt; a while ago.  As I stated there, the more connections you have, the better off you will be.  This is true of all social media.  Connect to anyone who ask to connect with you.&lt;/p&gt;
&lt;p&gt;Your LinkedIn connections are a large field of people you can send a version of the letter above.  Remember, you aren’t asking them for work, you are asking for help finding work.&lt;/p&gt;
&lt;p&gt;Which leads to a little rant I have built up about how to ask for help on LinkedIn.&lt;/p&gt;
&lt;h2 id=&#34;Asking-for-Help&#34;&gt;&lt;a href=&#34;#Asking-for-Help&#34; class=&#34;headerlink&#34; title=&#34;Asking for Help&#34;&gt;&lt;/a&gt;Asking for Help&lt;/h2&gt;&lt;p&gt;This time of year, I get multiple in-Mails that all say essentially the same thing.  “Hi, I am graduating from X with a degree in Y.  Let me know if you have any work.”  Oh, yes, they use a few more words than that.  But the gist is exactly that short little sentence.&lt;/p&gt;
&lt;p&gt;Now, imagine you are me and everyone sends you that same in-Mail. What would you do? Probably the same thing I do. Delete it.&lt;/p&gt;
&lt;p&gt;Occasionally, I’ll get some sort of variation that amounts to exactly what I’ve been saying. “I was hoping I could talk to you about …” Why does this work when the other way doesn’t. Simple, you aren’t asking me for work. You are asking for advice.&lt;/p&gt;
&lt;p&gt;If you want to get help, you need to stand out.  If you ask me for advice and I have a job for you, I’ll let you know.  If all you do is ask for a job… “Delete”&lt;/p&gt;
&lt;p&gt;This, of course, doesn’t always work. But, this is exactly how I got my first job. Now, if you follow the advice I’ve given so far, eventually, you’ll find a job. But there is a lot more you can do that will make you stand out.&lt;/p&gt;
&lt;h2 id=&#34;Volunteer&#34;&gt;&lt;a href=&#34;#Volunteer&#34; class=&#34;headerlink&#34; title=&#34;Volunteer&#34;&gt;&lt;/a&gt;Volunteer&lt;/h2&gt;&lt;p&gt;Hey, you aren’t doing anything yet anyhow.  If you took my advice and have a minimum wage job, you still have some brain power left.  So, find some organization that needs help with what you want to do and volunteer.  Now you have experience you can put on your resume and the organization has some program that helps them along.&lt;/p&gt;
&lt;h2 id=&#34;Stack-Overflow&#34;&gt;&lt;a href=&#34;#Stack-Overflow&#34; class=&#34;headerlink&#34; title=&#34;Stack Overflow&#34;&gt;&lt;/a&gt;Stack Overflow&lt;/h2&gt;&lt;p&gt;Another place you can gain some points is on Stack Overflow.  Answer question.  The fastest way to learn is to find a question that no one has answered.  Figure out the answer and post it.  If you do one question a day, your points will rise and you can include a link to your profile as part of your resume.&lt;/p&gt;
&lt;h2 id=&#34;Open-Source&#34;&gt;&lt;a href=&#34;#Open-Source&#34; class=&#34;headerlink&#34; title=&#34;Open Source&#34;&gt;&lt;/a&gt;Open Source&lt;/h2&gt;&lt;p&gt;Regardless of the type of work you want, participating in an Open Source project is another way of showing that you know your stuff. You might think you need to know a lot to participate in a project. But there are some low entry ways of participating.&lt;/p&gt;
&lt;p&gt;An easy way to get started is by visiting these sites and finding some low hanging fruit that will get you started:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;//up-for-grabs.net/#/&#34;&gt;Up for Grabs&lt;/a&gt; – A list of sites looks for help from new contributors.  Easy way to get started.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;//github.com/MunGell/awesome-for-beginners&#34;&gt;Awesome for Beginners&lt;/a&gt; – List of beginner friendly projects&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;//medium.freecodecamp.com/finding-your-first-open-source-project-or-bug-to-work-on-1712f651e5ba&#34;&gt;Check Out this Post&lt;/a&gt; – Even more ways to get started&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Your-Resume&#34;&gt;&lt;a href=&#34;#Your-Resume&#34; class=&#34;headerlink&#34; title=&#34;Your Resume&#34;&gt;&lt;/a&gt;Your Resume&lt;/h2&gt;&lt;p&gt;I wrote about &lt;a href=&#34;/your-programming-resume-is-garbage/&#34;&gt;how I think a Resume should be put together&lt;/a&gt; before.  Read it and implement it. Two things to remember:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You need to stand out.&lt;/li&gt;
&lt;li&gt;The how-to class your college gave you is useless.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Job-Boards&#34;&gt;&lt;a href=&#34;#Job-Boards&#34; class=&#34;headerlink&#34; title=&#34;Job Boards&#34;&gt;&lt;/a&gt;Job Boards&lt;/h2&gt;&lt;p&gt;You can post your resume to all the job boards if you like.  But the only one I bother with is Dice.com because it is the only one I know of that is focused on what we do.&lt;/p&gt;
&lt;h2 id=&#34;The-Interview&#34;&gt;&lt;a href=&#34;#The-Interview&#34; class=&#34;headerlink&#34; title=&#34;The Interview&#34;&gt;&lt;/a&gt;The Interview&lt;/h2&gt;&lt;p&gt;Once again, I’ve &lt;a href=&#34;/categories/Interview/&#34;&gt;written about the interview process&lt;/a&gt; before too.&lt;/p&gt;
&lt;p&gt;But here I want to talk to the new programmer specifically.&lt;/p&gt;
&lt;p&gt;First, no one expects you to have all the answers. If you don’t know, just say so. Don’t try to bluff you way through. They will find out you don’t know eventually. But more importantly, saying “I don’t know.” Means you really do know the stuff you’ve given an answer for.&lt;/p&gt;
&lt;p&gt;Second, while hardly anyone in this field wants to admit it, the interview is about interpersonal skills. A lot of the time, if you &lt;a href=&#34;/confident-programmer-secrets-revealed/&#34;&gt;act confident in yourself&lt;/a&gt;, they will be confident in you.&lt;/p&gt;
&lt;p&gt;Learn body language, power poses, etc.&lt;/p&gt;
&lt;p&gt;I was just thinking about this more today and realized … what’s the one thing most people want? They want to be liked. They want people to be interested in them. Sure, there are a lot of hacks I could tell you. But the simplest, and most genuine hack of all is to be interested in your interviewer.&lt;/p&gt;
&lt;p&gt;You know that part of the interview where they ask you if you have any questions? This is where you ask question that show you know something about the job you are interviewing for. But, you can also use this to ask a question that is both about the job and the person interviewing. Like, “What is your favorite part of working here?” and “What is your least favorite …” You find out something about the organization and you get them talking about something that is important to them.&lt;/p&gt;
&lt;h2 id=&#34;Bet-on-Yourself&#34;&gt;&lt;a href=&#34;#Bet-on-Yourself&#34; class=&#34;headerlink&#34; title=&#34;Bet on Yourself&#34;&gt;&lt;/a&gt;Bet on Yourself&lt;/h2&gt;&lt;p&gt;As a last resort. Bet on yourself. “I’ll work for you for free for 3 months to prove to you that you want to hire me full-time.”  Even if things don’t work out, you’ve gotten more experience.&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://davembush.github.com/revisiting-the-technical-interview/</guid>
            <title>Revisiting The Technical Interview</title>
            <link>http://davembush.github.com/revisiting-the-technical-interview/</link>
            <category>interview</category>
            <pubDate>Tue, 11 Oct 2016 06:30:00 -0400</pubDate>
            <description><![CDATA[ &lt;p&gt;I’ve written about the technical interview before. I’ve written both &lt;a href=&#34;/3-reasons-responding-to-useless-interview-questions-makes-you-happier/&#34;&gt;for&lt;/a&gt; and &lt;a href=&#34;/cracking-the-programmers-interview-code/&#34;&gt;against&lt;/a&gt; code interviews. And I’ve provided both &lt;a href=&#34;/7-c-interview-questions-that-weed-out-the-losers/&#34;&gt;C#&lt;/a&gt; and &lt;a href=&#34;/7-javascript-interview-questions-to-weed-out-imposters/&#34;&gt;JavaScript&lt;/a&gt; questions to weed out fake programmers. But a little more experience under my belt has me rethinking what makes a good interview.&lt;/p&gt;
&lt;p&gt;Now, you may wonder why I think I’m particularly qualified to speak about the interview process. Most people who have opinions about the interview process in particular have it from only one side. The one of being the guy looking for a job. And, most of you only interview when you need a job.&lt;/p&gt;
&lt;p&gt;What makes me qualified is that, I help interview people looking for a job and I interview for lots of jobs. In my opinion, you should be interviewing for a job, even if you don’t need one, at least twice a year. I interview more frequently than that. In the last 6 months, I think I’ve interviewed at least 4 times.&lt;/p&gt;
&lt;p&gt;So, let me start by telling you what the current interview process looks like, and why it doesn’t work. Then, I’ll move on to the few interviews that I believe captured the information everyone was looking for quickly and how you can move the conversation in this direction regardless of what side of the table you are sitting on.&lt;/p&gt;
&lt;figure&gt;![](/uploads/2016/10/image.png &#34;Revisiting The Technical Interview&#34;)&lt;figcaption&gt;Photo credit: [Gangplank HQ](//www.flickr.com/photos/gangplankhq/5590138183/) via [Visualhunt](//visualhunt.com) / [CC BY](//creativecommons.org/licenses/by/2.0/)&lt;/figcaption&gt;&lt;/figure&gt;

&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;h2 id=&#34;The-Oral-Exam-Interview&#34;&gt;&lt;a href=&#34;#The-Oral-Exam-Interview&#34; class=&#34;headerlink&#34; title=&#34;The Oral Exam Interview&#34;&gt;&lt;/a&gt;The Oral Exam Interview&lt;/h2&gt;&lt;p&gt;I was part of a phone interview recently where every question we asked, the person who was answering the questions answered every question in such exquisite detail we were left thinking, “This guy is either REALLY smart, or he was reading something.” We later gave him a coding interview where we were able to watch him solve the problem. This revealed that he must have been reading something because the code interview revealed that he didn’t have any idea what he was talking about. It wasn’t even a difficult interview.&lt;/p&gt;
&lt;p&gt;What this tells me is that all interviews that ask specific technical questions can do is tell you that the person you are interviewing can hack the technical interview. Just like certifications, all you know is that they can take a test.&lt;/p&gt;
&lt;p&gt;In fact, we’ve actually hired some people who were able to even make it through a coding interview only to find out they couldn’t code.&lt;/p&gt;
&lt;p&gt;The obvious danger is that you could end up hiring someone who can’t really do the work because they were able to jump through your list of questions like some sort of trick pony.&lt;/p&gt;
&lt;p&gt;But there is an opposite danger.&lt;/p&gt;
&lt;p&gt;Just because someone can’t answer your questions, doesn’t mean they can’t do the work.&lt;/p&gt;
&lt;h2 id=&#34;The-Coding-Interview&#34;&gt;&lt;a href=&#34;#The-Coding-Interview&#34; class=&#34;headerlink&#34; title=&#34;The Coding Interview&#34;&gt;&lt;/a&gt;The Coding Interview&lt;/h2&gt;&lt;p&gt;As I’ve already hinted, the coding interview is no better. Sometimes it will weed out the people who have no business interviewing, but it really tells you nothing other than, “have they used this technology before.” Unfortunately, I’m seeing a rise in this type of interview. It will take a number of consistent failures before we start to see a decline.&lt;/p&gt;
&lt;p&gt;About 7 months ago, I was on the receiving end of a coding interview when I was asked to do some specific things while someone was watching. I failed the interview because the specific things I was asked to do, I had not done yet even though I had written a full application using the tools the test was around.&lt;/p&gt;
&lt;p&gt;I’ve had other interviews where I was asked to code stuff that had no relation to the business I was being asked to interview for.&lt;/p&gt;
&lt;p&gt;So once again, you are just as likely to weed out a good person as you are to weed out a bad person.&lt;/p&gt;
&lt;h2 id=&#34;The-Problem&#34;&gt;&lt;a href=&#34;#The-Problem&#34; class=&#34;headerlink&#34; title=&#34;The Problem&#34;&gt;&lt;/a&gt;The Problem&lt;/h2&gt;&lt;p&gt;In both cases, the problem is the same. You are asking questions that are way too specific. Someone who is quick with the search engines can find you the answer you are looking for if they can hide the fact that they are doing it. If you limit yourself to in person interviews, you limit who you can hire to people who live in the same geographic area.&lt;/p&gt;
&lt;p&gt;Even a video interview can hide the fact that the person interviewing is looking up the answers. I know, I’ve seen it done.&lt;/p&gt;
&lt;p&gt;Even if you do a face to face, the answers you are looking for might be wrong or out of date.&lt;/p&gt;
&lt;p&gt;I was at an interview where I was asked how memory was managed in .NET. Since I taught .NET for about 3.5 years at a training company and had actually taught this specific information, I was easily able to give them the information they were looking for. But because I also listen to podcasts, I was also able to amend the information with the fact that how it works in Windows is only how it works in Windows. The spec doesn’t actually dictate how memory gets managed. At least not at the level I think they wanted answered.&lt;/p&gt;
&lt;p&gt;But, what if they were looking for the answer that indicated that I knew how memory was managed under Windows and I gave the answer according to the spec? Fail!&lt;/p&gt;
&lt;h2 id=&#34;A-Better-Way&#34;&gt;&lt;a href=&#34;#A-Better-Way&#34; class=&#34;headerlink&#34; title=&#34;A Better Way&#34;&gt;&lt;/a&gt;A Better Way&lt;/h2&gt;&lt;p&gt;One of the best interviews I ever had was when I was interviewing for a JavaScript position. The question I was asked at the beginning of the interview way, “I know nothing about JavaScript, explain JavaScript to me.” I started talking and occasionally, I would be asked to drill deeper into a subject. It was a hard interview because it required me to break something down I was very familiar with, think on my feet, and demonstrate that I was able to explain things. It also demonstrated how much of JavaScript I knew.&lt;/p&gt;
&lt;p&gt;As I’ve thought about that interview and compared it to others I have been on, what I realize is that this demonstrated that the person who was interviewing me really wanted to know what did I know. In contrast, just about every oral exam interview I’ve been on has made me feel like the person interviewing me wanted to show me how much HE knew.&lt;/p&gt;
&lt;h2 id=&#34;The-Right-Questions-to-Ask&#34;&gt;&lt;a href=&#34;#The-Right-Questions-to-Ask&#34; class=&#34;headerlink&#34; title=&#34;The Right Questions to Ask&#34;&gt;&lt;/a&gt;The Right Questions to Ask&lt;/h2&gt;&lt;p&gt;So, if you want you can steal the question above. But the point is, we want to ask open ended questions.&lt;/p&gt;
&lt;p&gt;“I see on your resume; you’ve worked with Angular. What problems did you face while using that framework?” or “I see you have experience using Git and SubVersion. What do you like and dislike about each?” or “Tell me about some of the issues your ran into with your last project.” In other words, ask very open ended questions around the technology you are interested in that invite them to demonstrate that they’ve really used the technology they say they have used.&lt;/p&gt;
&lt;h2 id=&#34;What-if-You-Are-the-One-Being-Interviewed&#34;&gt;&lt;a href=&#34;#What-if-You-Are-the-One-Being-Interviewed&#34; class=&#34;headerlink&#34; title=&#34;What if You Are the One Being Interviewed?&#34;&gt;&lt;/a&gt;What if You Are the One Being Interviewed?&lt;/h2&gt;&lt;p&gt;So, you walk into an interview and you are asked an oral exam question. What do you do? Well, the first thing to do is to try to answer the stupid question (without reading of course.) And then, and this is the key part because it will change the course of the interview, tell a story.&lt;/p&gt;
&lt;p&gt;Whatever they ask, the thing you want to do as soon as you possibly can, is to change the question into, “where have you used X in the past?” So, let’s take a JavaScript question. “What does it mean that JavaScript uses prototypal inheritance.” You answer the question, “prototypal inheritance means … in fact, knowing this became really important on one of my recent projects because we used it to do …” and you are off to the races. When you finish demonstrating that you know the answer and it has been important to your work in the past, you might consider asking, “I was wondering, how has that been important to your work here?” Remember, your goal is convincing the people interviewing you that you really can do the work. That hiring you compared to the other people they are going to interview is going to be 10 times less risky.&lt;/p&gt;
&lt;p&gt;Turning it all around like this is an art. It takes practice. This is why I encourage developers I coach to interview frequently. Try stuff out. Experiment. When you get home, review what you were asked and think, “how could I answer that better the next time?” Because, many of the questions we get asked get asked by everyone.&lt;/p&gt;
&lt;p&gt;If someone ask a question you don’t know the answer to, just say so. My standard answer is, “I haven’t done much with that, but I’ve been programming for X years and there is Google, and &lt;a href=&#34;/pluralsight&#34;&gt;PluralSight&lt;/a&gt;, how hard can it be?” If you’ve never used it but have sniffed around the edges, say so. An attitude of “I can do this.” works a lot better than lying about it.&lt;/p&gt;
&lt;p&gt;There are some other things you can do to hack the interview process, like sitting sideways, spreading your arms out, and other “hypnotic” tweaks. But the best hack is spinning stories around your answers to change the interview from an exam into something more of a conversation.&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://davembush.github.com/your-programming-resume-is-garbage/</guid>
            <title>Your Programming Resume is Garbage</title>
            <link>http://davembush.github.com/your-programming-resume-is-garbage/</link>
            <category>interview</category>
            <category>resumes</category>
            <pubDate>Thu, 30 Jun 2016 06:30:00 -0400</pubDate>
            <description><![CDATA[ &lt;p&gt;Over the last several years, I’ve had a chance to read a few Programming Resumes.  Or, I should say, TRY to read a few resumes.  But frankly, if the Programming Resume I typically see is common, everyone who reads my blog needs this advice.  I haven’t seen a barely adequate resume in years.  &lt;/p&gt;
&lt;p&gt;I’m sick of it.  Oh, it’s good for me of course.  I know my resume is going to stand out as such a unique work of art compared to the others, that I will get a call back right away.  After all, if the competition is so incredibly weak, I don’t even need to try.&lt;/p&gt;
&lt;p&gt;On the other hand, as someone who has to read these resumes, I’d like to have something better.&lt;/p&gt;
&lt;p&gt;And no, I’m not going to go over the standard “how to make your resume awesome” stuff because evidently most programmers can’t even get the basics down.  Seriously!&lt;/p&gt;
&lt;figure&gt;![](/uploads/2016/06/image-3.png &#34;Your Programming Resume is GARBAGE!&#34;)&lt;figcaption&gt;Photo credit: [ollesvensson](//www.flickr.com/photos/ollesvensson/2443240690/) via [Visualhunt.com](//visualhunt.com) / [CC BY](//creativecommons.org/licenses/by/2.0/)&lt;/figcaption&gt;&lt;/figure&gt;

&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;h2 id=&#34;Your-Programming-Resume-is-Too-Long&#34;&gt;&lt;a href=&#34;#Your-Programming-Resume-is-Too-Long&#34; class=&#34;headerlink&#34; title=&#34;Your Programming Resume is Too Long!&#34;&gt;&lt;/a&gt;Your Programming Resume is Too Long!&lt;/h2&gt;&lt;p&gt;I struggled for years to keep my resume down to two pages until I started seeing resumes from people with MUCH less experience than me that were 8 and 9 pages long.  And I thought my 4 pager was too long! Here’s a valuable tip.  No one really cares who you worked for 10 years ago.  Even if you are a contract programmer like I am and you tend to switch gigs once every year or so.  If you haven’t done it in the last year, I really don’t need a lot of detail about it.  What have you done recently?! Here’s what happens when I see an 8 pager.  I scan it for the buzz words I’m interested in and I see how often they show up.  I then try to see if I can discern how much you really know other than how to spell the buzzword.&lt;/p&gt;
&lt;h2 id=&#34;Your-Resume-Has-NO-White-Space&#34;&gt;&lt;a href=&#34;#Your-Resume-Has-NO-White-Space&#34; class=&#34;headerlink&#34; title=&#34;Your Resume Has NO White Space&#34;&gt;&lt;/a&gt;Your Resume Has NO White Space&lt;/h2&gt;&lt;p&gt;You need lots of this.  Just like in music, the rest are part of the music.  If nothing stands out in your resume, how am I supposed to tell what you are capable of doing?&lt;/p&gt;
&lt;h2 id=&#34;Did-you-try-to-USE-a-Word-Processor&#34;&gt;&lt;a href=&#34;#Did-you-try-to-USE-a-Word-Processor&#34; class=&#34;headerlink&#34; title=&#34;Did you try to USE a Word Processor?&#34;&gt;&lt;/a&gt;Did you try to USE a Word Processor?&lt;/h2&gt;&lt;p&gt;I’m sure you are thinking, “yeah, I did” But from the resumes I’ve seen it barely looks like you used more than an old fashion type writer.  There are two issues here.  First, your document is boring.  This goes along with the white space issue.  Once again, how can I tell what is important if it is all the same font and all jammed together?  Print out your resume.  Forget for a second that this is your resume.  Squint your eyes or otherwise look at it without being able to see the characters.  What stands out?  Does anything stand out?  What do you want people to focus on? The second issue here is this.  If you can’t use the basic features of a Word Processor, how good of a Programmer are you really?!&lt;/p&gt;
&lt;h2 id=&#34;Lack-of-Organization&#34;&gt;&lt;a href=&#34;#Lack-of-Organization&#34; class=&#34;headerlink&#34; title=&#34;Lack of Organization&#34;&gt;&lt;/a&gt;Lack of Organization&lt;/h2&gt;&lt;p&gt;This one is a little subtler.  I’m sure most people think their resumes are organized.  Most of what I see looks like this: The first page has some form of a “summary” of what the person has done.  Generally, a lot of bullet points that look no different than the same information they put in the work history.&lt;/p&gt;
&lt;p&gt;The next seven or more pages have the work history with bullets under each with what the person did.&lt;/p&gt;
&lt;p&gt;But here is my problem.  You are making me wade through that first section to see if you did anything I’m interested in.  It would be so much easier if you organized those bullets a bit.  Again, white space, different fonts.&lt;/p&gt;
&lt;h2 id=&#34;You-Have-too-many-Bullets-per-Job&#34;&gt;&lt;a href=&#34;#You-Have-too-many-Bullets-per-Job&#34; class=&#34;headerlink&#34; title=&#34;You Have too many Bullets per Job&#34;&gt;&lt;/a&gt;You Have too many Bullets per Job&lt;/h2&gt;&lt;p&gt;Yeah.  I did this too.  But it was for a place I worked at for 8 years.  There was a lot to tell.  But then I realized, no one cares.&lt;/p&gt;
&lt;p&gt;Here is all I care about with your work history.  What technology did you use?  Did you do something interesting?  And bonus points if you can tell me what value you provided.  Who are you beyond what technology you know? My current format has two bullets for each assignment that emphasize my strengths as a programmer generally.  This is the value I provided.&lt;/p&gt;
&lt;p&gt;The third bullet is the list of technology I used at that assignment.  This is because, while I’ve listed all the tech I know at the top, I believe most places want to know where I got the experience.  I know I would.&lt;/p&gt;
&lt;h2 id=&#34;Multiple-Short-Gigs&#34;&gt;&lt;a href=&#34;#Multiple-Short-Gigs&#34; class=&#34;headerlink&#34; title=&#34;Multiple Short Gigs&#34;&gt;&lt;/a&gt;Multiple Short Gigs&lt;/h2&gt;&lt;p&gt;A recent programming resume I saw had multiple 3 and 4 month assignments.  This is a HUGE warning flag.  Anyone looking at your resume is going to take one look at that and all kinds of warning bells are going to go off in their head.  Especially if you can’t explain why they were short.  Maybe they weren’t your fault.  But let me tell you what is going on at the hiring side.  We do a tech interview, the person comes in and we find out they have no clue how to do anything we hired them for.  If you have multiple short assignments, the first thing we think is, “He has to be lying about what he can do.” Then again, if you are lying about what you can do, why not lie about how long you worked some place?  Not that I’m suggesting that.  We’ll find out soon enough.  But if you are already lying…&lt;/p&gt;
&lt;h2 id=&#34;Only-What-You-Know&#34;&gt;&lt;a href=&#34;#Only-What-You-Know&#34; class=&#34;headerlink&#34; title=&#34;Only What You Know&#34;&gt;&lt;/a&gt;Only What You Know&lt;/h2&gt;&lt;p&gt;This should be obvious, but I see so many resumes that have exactly what we are looking for and then when we give a simple coding exercise, they can’t do the exercise.&lt;/p&gt;
&lt;p&gt;We aren’t trying to trip you up.  Just prove you’ve done something with the technology before.  Please.&lt;/p&gt;
&lt;p&gt;Just as a recent example.&lt;/p&gt;
&lt;p&gt;We did a phone screen with a guy and we asked him several very technical questions.  No code.  Just, “what can you tell me about X” kind of questions.  And he answered all of them in very intricate detail.  He sounded really good.  But after a half hour of this, you start to wonder.  “If he is THIS smart, why is he interviewing for THIS job?”  It isn’t like we are any of the really big tech companies.&lt;/p&gt;
&lt;p&gt;When we finished the phone screen, I told the guy I was doing the interview with, “He’s either wicked smart or he was reading.”  Well, there is only one way to find out.  Do a face to face where he can’t read.  Only we couldn’t do that because he lived too far away.  So the next best thing was a skype interview with a shared code screen.&lt;/p&gt;
&lt;p&gt;All we asked the guy to do was a simple object oriented abstraction exercise.  OOP 101.  It became clear that he didn’t have any clue about how to do Object Oriented Programming nor did he know anything about any of the technology we were going to ask him to do.&lt;/p&gt;
&lt;p&gt;I guess this must work some of the time because we keep seeing this.&lt;/p&gt;
&lt;h2 id=&#34;Keep-On-Generating-Garbage&#34;&gt;&lt;a href=&#34;#Keep-On-Generating-Garbage&#34; class=&#34;headerlink&#34; title=&#34;Keep On Generating Garbage&#34;&gt;&lt;/a&gt;Keep On Generating Garbage&lt;/h2&gt;&lt;p&gt;Like I said, the part of me that is competing with you for work wants you to continue producing crap.  It makes it SO much easier for me to land my next gig.  And now that I know, it has actually shaped what my resume looks like.  Two pages.  Just the essentials.  Links to places where they can get more information about me if they want to go that deep.&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://davembush.github.com/are-you-average-or-awesome-9-ways-to-improve/</guid>
            <title>Are You Average or Awesome? 9 Ways to Improve.</title>
            <link>http://davembush.github.com/are-you-average-or-awesome-9-ways-to-improve/</link>
            <category>tdd</category>
            <category>interview</category>
            <category>best practices</category>
            <category>design patterns</category>
            <pubDate>Thu, 12 May 2016 07:30:00 -0400</pubDate>
            <description><![CDATA[ &lt;p&gt;The story goes that there were two men, Joe and Frank, who were camping out in the woods when a bear showed up in the camp.  Terrified, they decided the best they could do would be to stay perfectly still until the bear left.  Hopefully, the bear wouldn’t notice them.  As the bear was poking around, Joe says to Frank, “What are we going to do if this doesn’t work?”  Frank says, “Run!”  Joe says, “You really think we can out run a bear?”  Frank says, “I don’t need to out run the bear.  I only need to out run you.”&lt;/p&gt;
&lt;figure&gt;![](/uploads/2016/05/image.png &#34;9 Ways to Improve&#34;)&lt;figcaption&gt;Photo credit: [Internet Archive Book Images](//www.flickr.com/photos/internetarchivebookimages/14767148885/) via [VisualHunt.com](//visualhunt.com) / [No known copyright restrictions](//flickr.com/commons/usage/)&lt;/figcaption&gt;&lt;/figure&gt;

&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;p&gt;For years I have used this story to encourage my kids to be better than their peers.  Right now, most people are so “out of shape” that “running faster” than the competition is easy.  By comparison, my kids look awesome when by any other measure, they are probably only doing the bare minimum necessary.  This is not to say they aren’t REALLY good at what they do but, there is always room for improvement.&lt;/p&gt;
&lt;h2 id=&#34;Average-Programmers&#34;&gt;&lt;a href=&#34;#Average-Programmers&#34; class=&#34;headerlink&#34; title=&#34;Average Programmers&#34;&gt;&lt;/a&gt;Average Programmers&lt;/h2&gt;&lt;p&gt;And then there are conversations I have with other programmers.  So many think they are great when they are only slightly better than the people they are working with.  The lack of desire to learn more, to be any better than adequate, is appalling.  And this is to say nothing of the programmers who never make the cut.  The ones I never work with because the people I work with and for won’t hire them.  I’ve been a part of some of those interviews.&lt;/p&gt;
&lt;p&gt;People who can’t answer the most basic of &lt;a href=&#34;/7-c-interview-questions-that-weed-out-the-losers/&#34;&gt;C#&lt;/a&gt;, ASP.NET, or &lt;a href=&#34;/7-javascript-interview-questions-to-weed-out-imposters/&#34;&gt;JavaScript questions&lt;/a&gt;.  This is to say nothing of &lt;a href=&#34;/5-reasons-learning-terminology-increases-your-effectiveness-as-a-programmer/&#34;&gt;people who believe knowing concepts trumps knowing the terms&lt;/a&gt; that specify them.&lt;/p&gt;
&lt;h2 id=&#34;Average-Organizations&#34;&gt;&lt;a href=&#34;#Average-Organizations&#34; class=&#34;headerlink&#34; title=&#34;Average Organizations&#34;&gt;&lt;/a&gt;Average Organizations&lt;/h2&gt;&lt;p&gt;And then there are the organizations who settle for frameworks that provide “Silver Bullet” answers to problems.  Not because this is technically, the best solutions, but because this is the solution the requires the least from the developers they have working for them.  The problem with this approach is that it doesn’t demand excellence from the programming team that works for them.  And don’t get me started on managers who think they are “doing Agile” who obviously don’t even recognize that “Agile” is not a noun.&lt;/p&gt;
&lt;p&gt;The problem with comparing ourselves to our peers is that you can always find someone worse than yourself.  Not only is this true because you will always find someone who just doesn’t care, but even if we all cared, there will always be someone, who for any number of reasons, can’t be as good as you are.&lt;/p&gt;
&lt;h2 id=&#34;Be-Awesome&#34;&gt;&lt;a href=&#34;#Be-Awesome&#34; class=&#34;headerlink&#34; title=&#34;Be Awesome&#34;&gt;&lt;/a&gt;Be Awesome&lt;/h2&gt;&lt;p&gt;But we can all strive to be the best.&lt;/p&gt;
&lt;p&gt;As programmers, what if we all decided to make as our goal code so bug free that no one could find problems with the code we wrote?  Maybe there is some part of the language you program in, or the framework that you use, that you’ve never tried.  How about learning it?  Is there a tool you could start using that would help you program better?  Maybe you’ve exhausted everything there is to learn about the language or framework that you use.  Maybe it is time to learn some other language.&lt;/p&gt;
&lt;p&gt;Who do you want to be? What do you want to be known for? These are interesting questions because they cause us to focus.  Do you want to be known as mediocre?  Keep coasting.  Do you want to be the person who gets the challenging problems because you are the only person who is reliable enough to give the project to? The problem with out-running your peers is that eventually, the bear will be the only thing behind you.  Where will you be?&lt;/p&gt;
&lt;h2 id=&#34;Action-Steps&#34;&gt;&lt;a href=&#34;#Action-Steps&#34; class=&#34;headerlink&#34; title=&#34;Action Steps&#34;&gt;&lt;/a&gt;Action Steps&lt;/h2&gt;&lt;p&gt;OK, fine.  How do we get from mediocre to awesome?&lt;/p&gt;
&lt;h3 id=&#34;1-Decide-to-Master-a-Skill&#34;&gt;&lt;a href=&#34;#1-Decide-to-Master-a-Skill&#34; class=&#34;headerlink&#34; title=&#34;1. Decide to Master a Skill&#34;&gt;&lt;/a&gt;1. Decide to Master a Skill&lt;/h3&gt;&lt;p&gt;I don’t care who you are or how good you are, there is still something you don’t know.  The great thing about being a programmer is that there is always something to master.  Do some sort of self-evaluation on your skills and determine to master some skill.&lt;/p&gt;
&lt;p&gt;Just by way of example, here are some possible skills you might learn.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Test Driven Development&lt;/li&gt;
&lt;li&gt;Deep Dive a Language you “Know”&lt;/li&gt;
&lt;li&gt;Learn a Language You Don’t Know&lt;/li&gt;
&lt;li&gt;Design Patterns&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-Teach&#34;&gt;&lt;a href=&#34;#2-Teach&#34; class=&#34;headerlink&#34; title=&#34;2. Teach&#34;&gt;&lt;/a&gt;2. Teach&lt;/h3&gt;&lt;p&gt;The best way to learn a topic is to teach the topic.  There are at least two reasons for this.  First, preparing to teach makes you organize all of those scattered bits of information in your brain in a way that someone else can grasp.  Second, it will raise questions you didn’t even know you should ask.  I can’t tell you how many times I’ve explained something and the person I am teaching ask a question I’ve never considered before.  If you don’t know the answer, find the answer.  You obviously don’t know your subject as well as you think you do.&lt;/p&gt;
&lt;p&gt;Here are some possible ways to teach.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Host a “Lunch and Learn”&lt;/li&gt;
&lt;li&gt;Start a Blog&lt;/li&gt;
&lt;li&gt;Write a Book&lt;/li&gt;
&lt;li&gt;Mentor a Younger Programmer&lt;/li&gt;
&lt;li&gt;Present Something at a Users Group or Meet-up.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-Track-Progress&#34;&gt;&lt;a href=&#34;#3-Track-Progress&#34; class=&#34;headerlink&#34; title=&#34;3. Track Progress&#34;&gt;&lt;/a&gt;3. Track Progress&lt;/h3&gt;&lt;p&gt;In the business world, they say, “what you measure, grows.”  So, measure:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Decrease in bugs reported.&lt;/li&gt;
&lt;li&gt;Elapse time from start of project to bug free code.&lt;/li&gt;
&lt;li&gt;Cyclomatic complexity of your methods.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-Interview-for-a-New-Job&#34;&gt;&lt;a href=&#34;#4-Interview-for-a-New-Job&#34; class=&#34;headerlink&#34; title=&#34;4. Interview for a New Job&#34;&gt;&lt;/a&gt;4. Interview for a New Job&lt;/h3&gt;&lt;p&gt;One of the things I’ve found that interviewing for new gigs does for me is that it reveals things I should know.  I find out quickly what I should know that I don’t.  And don’t be the guy who says, “If my 30 years of experience isn’t good enough for you, I don’t want your stinking job.”  Answer the questions, not matter how much experience you have.  You might just learn something.  If you don’t know the answer, after the interview, go find the answer.  Don’t be like, “why should I keep that in my brain?”  I mean, that might be true, but go find the answer too.&lt;/p&gt;
&lt;p&gt;I had one of those interviews.  I wrote a whole post about it that I deleted.  They had me doing something I was unable to do and that I felt the rest of my knowledge and skills more than compensated for.  But, after the interview, I went and found out how to do what they had asked.&lt;/p&gt;
&lt;h3 id=&#34;5-Change-Jobs&#34;&gt;&lt;a href=&#34;#5-Change-Jobs&#34; class=&#34;headerlink&#34; title=&#34;5. Change Jobs&#34;&gt;&lt;/a&gt;5. Change Jobs&lt;/h3&gt;&lt;p&gt;This probably sounds like odd advice, but as a contract programmer, I’ve been on assignments that have lasted as long as 8 years and I’ve been on assignments that were as short as 4 months.  What I’ve learned is that the longer I stay on an assignment, the staler my skills become.  That 8-year gig nearly made me unmarketable.  Why?  Because I never had to learn something new.  The only reason I am still marketable is because I started learning newer stuff toward then end of that gig.  When the gig was changing every 2 years or so, I was a lot more capable of moving into a new position.  Now, I’m learning all the time.  Learning what I think will make me more marketable as well as what I would really like to be doing next.  Some of that makes its way into what I’m doing today.  Some of it will have to wait.  But it is all experience and it is all valuable.  The point is, don’t get stuck knowing what you know.  Switching jobs is the fast way to achieve that.&lt;/p&gt;
&lt;h3 id=&#34;6-Ask-for-a-Code-Review&#34;&gt;&lt;a href=&#34;#6-Ask-for-a-Code-Review&#34; class=&#34;headerlink&#34; title=&#34;6. Ask for a Code Review&#34;&gt;&lt;/a&gt;6. Ask for a Code Review&lt;/h3&gt;&lt;p&gt;To be clear, what you are asking for is a review of your code, not how pretty it is.  Although, depending on how much experience you have, there may be some benefit in having your code reviewed for formatting as well as clarity.&lt;/p&gt;
&lt;p&gt;What I would hope you would get out of this exercise is several, “Have you considered doing it this way…” kind of comments.  If you can’t get someone to review your code, there are some great code cop kind of tools available for every language that you can have review your code for common mistakes.  But even better if you can get another human to look at your code.&lt;/p&gt;
&lt;p&gt;It is interesting, I’ve been coding for 28 years and I’ve lost track of how many companies I’ve worked for.  There was only one company that I’ve ever worked for that did code reviews.&lt;/p&gt;
&lt;h3 id=&#34;7-Change-Your-Body-Language&#34;&gt;&lt;a href=&#34;#7-Change-Your-Body-Language&#34; class=&#34;headerlink&#34; title=&#34;7. Change Your Body Language&#34;&gt;&lt;/a&gt;7. Change Your Body Language&lt;/h3&gt;&lt;p&gt;This probably seems like really odd advice so let me explain.  Or maybe you’ve already seen the &lt;a href=&#34;//www.ted.com/speakers/amy_cuddy&#34;&gt;Ted talk&lt;/a&gt; by Amy Cuddy that says the research shows that if you assume a body position that says, “I’m awesome” you are more likely to feel awesome.  But you may wonder what feeling awesome has to do with BEING awesome.&lt;/p&gt;
&lt;p&gt;Well, in my experience, you end up being who you believe yourself to be.  One way of hacking yourself into being awesome is to convince yourself that you are.  The best way to do that is to assume body positions that communicate that you are.&lt;/p&gt;
&lt;p&gt;Don’t think this is possible?  I grew up walking toe out.  At some point in High School or College, I read that it was more efficient to walk with my feet parallel to each other.  I started concentrating on changing how I walk.  Now I no longer think about it.  I haven’t thought about it for years.&lt;/p&gt;
&lt;p&gt;I’ve done the same thing with my body position.  Not as hard a modification, but I’ve noticed that it DOES work.&lt;/p&gt;
&lt;h3 id=&#34;8-Don’t-Brag&#34;&gt;&lt;a href=&#34;#8-Don’t-Brag&#34; class=&#34;headerlink&#34; title=&#34;8. Don’t Brag&#34;&gt;&lt;/a&gt;8. Don’t Brag&lt;/h3&gt;&lt;p&gt;The other thing that changing your body language will do is that it will communicate that you are confident and you’ll never have to say a word.  I believe I’m pretty good at what I do, but my general practice is to let what I know be discovered.  As I’ve observed my peers, I’ve found that the more they proclaim how great they are, the less confident they are that they really are, and generally, they aren’t.  You don’t want to be that person.  You want to portray confidence to be confident, but you want to be discovered.  “Even a fool, when he is silent, is considered wise.” and “Better to be silent and be thought a fool than to open your mouth and remove all doubt.”&lt;/p&gt;
&lt;h3 id=&#34;9-Focus-On-One-Thing&#34;&gt;&lt;a href=&#34;#9-Focus-On-One-Thing&#34; class=&#34;headerlink&#34; title=&#34;9. Focus On One Thing&#34;&gt;&lt;/a&gt;9. Focus On One Thing&lt;/h3&gt;&lt;p&gt;The temptation, if you are motivated at all, is to try to improve in every area all at once.  That is a recipe for disaster.  Focus on one thing.  I didn’t change how I walked and how I talked and how I ran and how I sat and… you get the picture.  I focused on how I walked.  Sometime later I focused on how I sat.  I learned how to code well and then how to do Test Driven Development.  I’m often asked how I learned all I know.  It is easy, I learned one thing at a time.&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://davembush.github.com/3-reasons-responding-to-useless-interview-questions-makes-you-happier/</guid>
            <title>3 Reasons Responding To Useless Interview Questions Makes You Happier</title>
            <link>http://davembush.github.com/3-reasons-responding-to-useless-interview-questions-makes-you-happier/</link>
            <category>interview</category>
            <category>job search</category>
            <pubDate>Thu, 10 Sep 2015 07:30:00 -0400</pubDate>
            <description><![CDATA[ &lt;p&gt;I’ve noticed a trend recently.  Someone will write a post about some technical interview question and someone will write a comment about how that’s such a dumb question that they wouldn’t even bother answering it.  I’ve actually been that guy recently.  John Sonmez wrote about “&lt;a href=&#34;//simpleprogrammer.com/2015/01/19/cracking-the-coding-interview/&#34;&gt;Cracking the Coding Interview&lt;/a&gt;” and I responded that I don’t do coding interviews.  &lt;a href=&#34;/cracking-the-programmers-interview-code/&#34;&gt;In fact, I wrote a whole post about this&lt;/a&gt;.  But as John pointed out, this may actually cause you to be limiting your career.  You wouldn’t answer that question for a 33% raise?  Really?  There isn’t anything that could motivate you to consider answering a question that you feel is useless, stupid or dumb? This week, I saw another post about some technical interview question that someone said he wouldn’t answer.  Sorry, I don’t have a link for that one, I wish I did.&lt;/p&gt;
&lt;p&gt;And then add to this, the number of useless interview questions I have answered in the last year.  Why did I answer them?  Because I could.  Because the challenge was actually fun.&lt;/p&gt;
&lt;p&gt;And so, let’s reconsider the arrogant stance of “Thanks for your time, I’ll show myself out.” First let’s consider why we might not want to answer a particular question.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/uploads/2015/09/image1.png&#34; alt=&#34;image&#34; title=&#34;image&#34;&gt;&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;h2 id=&#34;Telling-The-Truth-Makes-You-Happier&#34;&gt;&lt;a href=&#34;#Telling-The-Truth-Makes-You-Happier&#34; class=&#34;headerlink&#34; title=&#34;Telling The Truth Makes You Happier.&#34;&gt;&lt;/a&gt;Telling The Truth Makes You Happier.&lt;/h2&gt;&lt;p&gt;As I said, I’ve answered a lot of useless questions.  Most recently, I was asked about how garbage collection works in .NET.  When is the last time anyone needed to know that?  Isn’t the whole point of .NET that memory management gets handled for you?  Someone else may have refused to answer the question.  Why?  Because we don’t think we can.&lt;/p&gt;
&lt;p&gt;The reason I don’t like code interviews is because 1) I’ve never had to do one and 2) I’m afraid I won’t be able to do it.&lt;/p&gt;
&lt;p&gt;Dumb reason! The post I mentioned earlier that I don’t have a link for was something about how linked lists worked.  Or sorting.  Why did he consider it an issue?  Maybe because he didn’t feel like he could answer it? Let’s face it, most of use, rather than admitting we don’t know something, would just rather deflect the problem to the person asking the question.&lt;/p&gt;
&lt;p&gt;And so, the first way that just answering the question will make you happier is that telling the truth makes you happier.&lt;/p&gt;
&lt;p&gt;The more honest we are with ourselves and with others, &lt;a href=&#34;//www.smh.com.au/lifestyle/life/time-to-come-clean-little-white-lies-found-to-be-a-health-hazard-20120805-23o0t.html&#34;&gt;the happier we are&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;So, rather than taking the stance of “I won’t answer that question”, why not prepare yourself so that you CAN answer the question? And this leads to my second reason…&lt;/p&gt;
&lt;h2 id=&#34;You-Will-Gain-Confidence&#34;&gt;&lt;a href=&#34;#You-Will-Gain-Confidence&#34; class=&#34;headerlink&#34; title=&#34;You Will Gain Confidence&#34;&gt;&lt;/a&gt;You Will Gain Confidence&lt;/h2&gt;&lt;p&gt;How’s that?  Well, let’s say you answer the question, the first time, the best way that you know how but you know you were pretty shaky.  So, you go home, and look up the answer.  The next time you get asked the question, you are better prepared.  You’ve learned something along the way and are now more confident.  Or, you may find out that the question wasn’t all that important given all you were able to answer.&lt;/p&gt;
&lt;p&gt;I’ll tell you a little insider secret.  If you really know your stuff, you’ll probably get the job anyhow.  The interviewer is just trying to figure out how much you know.  If you’ve gotten to the point where they are asking one of these seemingly irrelevant questions, you’ve probably already got the job.&lt;/p&gt;
&lt;p&gt;Most people can’t even answer the basic questions I’ve previously blogged about:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/7-c-interview-questions-that-weed-out-the-losers/&#34;&gt;Basic C# Questions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/7-javascript-interview-questions-to-weed-out-imposters/&#34;&gt;Basic JavaScript Questions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I know of at least two places that have interviewed 10 people just to find one that would be OK.  Knowing this, alone, has given me a lot more confidence when I interview.&lt;/p&gt;
&lt;p&gt;But as people have mentioned on those post, just because they can answer the questions, doesn’t mean they can code.  We have to have other questions we can ask you to get at that.&lt;/p&gt;
&lt;p&gt;I’ve been in two interviews, that I can remember that did this well.  One was for a position that was mostly JavaScript.  In fact, he never asked me anything about C#.  What he said was something like, “I know nothing about JavaScript, tell me about JavaScript.”  And then he stopped talking and listened to me.  Every once in a while he would say, “Tell me more about that.”  That was the entire interview.&lt;/p&gt;
&lt;p&gt;A couple of weeks ago, I was asked to talk about my experience with ASP.NET’s MVC.&lt;/p&gt;
&lt;p&gt;A question that was just as open ended.  The guy’s boss, who was the hiring manager, questioned the open endedness of the question.  The response was, “I want to know if he’s worked with it before.  If he has, he should be able to answer that question.” Interestingly, there were no JavaScript questions this time.&lt;/p&gt;
&lt;h2 id=&#34;You-Might-Get-Your-Dream-Job&#34;&gt;&lt;a href=&#34;#You-Might-Get-Your-Dream-Job&#34; class=&#34;headerlink&#34; title=&#34;You Might Get Your Dream Job&#34;&gt;&lt;/a&gt;You Might Get Your Dream Job&lt;/h2&gt;&lt;p&gt;Listen!  You decided to interview, I assume, because you wanted this job, or at least thought you might want this job.  You’re going to walk out of an interview and make yourself look like an ass simply because you don’t like the question?  Who is being dumb now?! Like I said, it is so hard to find good talent, that if they are asking hard questions, you’ve probably already got the job anyhow.  But if you walk out, not only do you not have the job, but you’ll never get a second chance to interview with the people in the room again, and that includes when they show up at other companies.  Think that’s not true?  I know I keep a mental list of people I might want to consider in the future.  Both people I’ve worked with and people I’ve interviewed.&lt;/p&gt;
&lt;p&gt;So take your best stab at the question.  There have been a number of times when my answer has been, I don’t know, but here is how I’d find out when I needed it.  Often the “how I’d get the information answer” is better than actually being able to answer the question.&lt;/p&gt;
&lt;p&gt;So, dare to answer the questions.  The results might surprise you.&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://davembush.github.com/7-javascript-interview-questions-to-weed-out-imposters/</guid>
            <title>7 JavaScript Interview Questions [To Weed Out Imposters]</title>
            <link>http://davembush.github.com/7-javascript-interview-questions-to-weed-out-imposters/</link>
            <category>javascript</category>
            <category>interview</category>
            <pubDate>Thu, 20 Aug 2015 07:30:00 -0400</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;img src=&#34;/uploads/2015/08/image2.png&#34; alt=&#34;image&#34; title=&#34;image&#34;&gt;&lt;/p&gt;
&lt;p&gt;Last week, I posted &lt;a href=&#34;/7-c-interview-questions-that-weed-out-the-losers/&#34;&gt;7 interview questions for C# programmers.&lt;/a&gt;  I guess I forgot that people can’t see in my brain.  So, let me be very explicit this time.  The “weed out the losers” questions are meant to do just that.  Weed out people who have absolutely no business even applying for the job.&lt;/p&gt;
&lt;p&gt;You would be amazed at how many people interview for a job who have all kinds of cool buzzwords on their resume, but when you ask them about it, they know nothing about the subject.  I’m not sure if this is the recruiter who is representing them trying to help them out by beefing up the resume to get them in the door or if they actually do this themselves.  But, as someone who interviews, I have to have a way of making sure the applicant I’m interviewing is worth interviewing in the first place.  Hopefully, I can do this over the phone in less than a half an hour.&lt;/p&gt;
&lt;p&gt;So, with that said, if your favorite question isn’t on this list, it is probably because it is a question I would save for some future interview.&lt;/p&gt;
&lt;p&gt;Also, to those of you who may think that a technical interview doesn’t really tell you if the programmer is a good programmer or not, I have this to say… You are right.  And when I was a younger programmer and was being interviewed with technical questions, I felt the same way.  But now that I’m on the other side of the table, I find that way too often, the people who can pass a technical interview are a lot more likely to be good programmers than the ones who can’t.&lt;/p&gt;
&lt;p&gt;And finally, I would not rule out an applicant because he got a couple of questions wrong, or didn’t answer them exactly the way I expected.  But if couldn’t answer most of them, that would raise a huge red flag! So, here are 7 JavaScript Interview Questions you should ask first.  Otherwise, you may be wasting your time.&lt;/p&gt;
&lt;h2 id=&#34;What-are-two-ways-you-might-create-an-object-in-JavaScript&#34;&gt;&lt;a href=&#34;#What-are-two-ways-you-might-create-an-object-in-JavaScript&#34; class=&#34;headerlink&#34; title=&#34;What are two ways you might create an object in JavaScript?&#34;&gt;&lt;/a&gt;What are two ways you might create an object in JavaScript?&lt;/h2&gt;&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;p&gt;This is a pretty simple question if you’ve been using JavaScript.  Shoot, you should even be able to guess at one of the answers.  But, still, in my experience, there are a lot of people who say they are JavaScript programmers who don’t know how to answer this question.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use the “new” keyword to call a function.&lt;/li&gt;
&lt;li&gt;Use the open&amp;#x2F;close curly braces.&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; o = &amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;You might want to follow up with, “using the new keyword, at what point is the object created?”  But, as far as questions that weed out, I would consider that something that could wait until I’m really interviewing to discover how deep the applicant’s knowledge goes.&lt;/p&gt;
&lt;h2 id=&#34;How-would-you-create-an-array&#34;&gt;&lt;a href=&#34;#How-would-you-create-an-array&#34; class=&#34;headerlink&#34; title=&#34;How would you create an array?&#34;&gt;&lt;/a&gt;How would you create an array?&lt;/h2&gt;&lt;p&gt;This is a similar level question to “How do you create an object.”  And yet, there are some who can answer the first who can’t answer this one.&lt;/p&gt;
&lt;p&gt;While it is possible to create an array with&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; myArray = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Array&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;It is a long way of creating an array.  One would hope that the answer included using square brackets.&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; myArray = [];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;Once again, there are other questions we could ask, but since we only want to know that the applicant is worth further investigation, I would leave the array questioning here.&lt;/p&gt;
&lt;h2 id=&#34;What-is-variable-hoisting&#34;&gt;&lt;a href=&#34;#What-is-variable-hoisting&#34; class=&#34;headerlink&#34; title=&#34;What is variable hoisting?&#34;&gt;&lt;/a&gt;What is variable hoisting?&lt;/h2&gt;&lt;p&gt;This one is a slightly harder question to answer, and I wouldn’t expect anyone to be able to answer this.  But again, we are trying to get a quick determination of the applicant’s skill level.  How well do they understand the language they claim to know? Variable hoisting is the term that refers to the fact that no matter where a variable is declared in a scope, the JavaScript engine will move that declaration to the top of the scope.  If you declare a variable in the middle of a function, for example and assign a value to it all in one line:&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;foo&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// a bunch of code here&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; a = &lt;span class=&#34;string&#34;&gt;&amp;quot;abc&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;The code that actually gets run would look like this:&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;foo&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; a;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// a bunch of code&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    a = &lt;span class=&#34;string&#34;&gt;&amp;quot;abc&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;What-are-the-dangers-of-global-variables-and-how-do-you-protect-against-it&#34;&gt;&lt;a href=&#34;#What-are-the-dangers-of-global-variables-and-how-do-you-protect-against-it&#34; class=&#34;headerlink&#34; title=&#34;What are the dangers of global variables and how do you protect against it?&#34;&gt;&lt;/a&gt;What are the dangers of global variables and how do you protect against it?&lt;/h2&gt;&lt;p&gt;The danger of global variables is that someone else could create a variable with the same name and overwrite the variable you are using.  This is a bad idea in any language.&lt;/p&gt;
&lt;p&gt;You prevent this in a number of ways.  The most common would be to create one global variable that all of your other variables live in:&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; applicationName = &amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;And then any time you need to create a global variable, you attach it to that object.&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;applicationName.&lt;span class=&#34;property&#34;&gt;myVariable&lt;/span&gt; = &lt;span class=&#34;string&#34;&gt;&amp;quot;abc&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;The other way you can guard against this is by wrapping all of your code in a self-executing function so that any variables that are declared are declared within that function’s scope.&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; a = &lt;span class=&#34;string&#34;&gt;&amp;quot;abc&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;In reality, you’ll probably end up using both methods.&lt;/p&gt;
&lt;h2 id=&#34;How-do-you-iterate-through-members-in-a-JavaScript-object&#34;&gt;&lt;a href=&#34;#How-do-you-iterate-through-members-in-a-JavaScript-object&#34; class=&#34;headerlink&#34; title=&#34;How do you iterate through members in a JavaScript object?&#34;&gt;&lt;/a&gt;How do you iterate through members in a JavaScript object?&lt;/h2&gt;&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; prop &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; obj)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// bonus points for hasOwnProperty&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(obj.&lt;span class=&#34;title function_&#34;&gt;hasOwnProperty&lt;/span&gt;(prop))&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// do something here&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;What-is-a-closure&#34;&gt;&lt;a href=&#34;#What-is-a-closure&#34; class=&#34;headerlink&#34; title=&#34;What is a closure?&#34;&gt;&lt;/a&gt;What is a closure?&lt;/h2&gt;&lt;p&gt;A closure is what allows a function inside the scope of another function to still be able to see the variables declared in the outer scope even after everything else about that scope has disappeared.  Bonus points if they state something about the dangers of using a closure inside of a for&amp;#x2F;next loop without declaring a variable to hold the current value of the iteration variable.&lt;/p&gt;
&lt;h2 id=&#34;Describe-your-experience-unit-testing-JavaScript&#34;&gt;&lt;a href=&#34;#Describe-your-experience-unit-testing-JavaScript&#34; class=&#34;headerlink&#34; title=&#34;Describe your experience unit testing JavaScript&#34;&gt;&lt;/a&gt;Describe your experience unit testing JavaScript&lt;/h2&gt;&lt;p&gt;Here we are just trying to find out if they’ve even done unit testing with JavaScript.  It is an open-ended question with no particular right answer but it should tell you something in the process.&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://davembush.github.com/7-c-interview-questions-that-weed-out-the-losers/</guid>
            <title>7 C# Interview Questions [That Weed Out The Losers!]</title>
            <link>http://davembush.github.com/7-c-interview-questions-that-weed-out-the-losers/</link>
            <category>interview</category>
            <category>c#</category>
            <pubDate>Thu, 13 Aug 2015 07:30:00 -0400</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;img src=&#34;/uploads/2015/08/image1.png&#34; alt=&#34;image&#34; title=&#34;image&#34;&gt;&lt;/p&gt;
&lt;p&gt;So, once again, the place I am currently working has been interviewing for some more programmers and we’ve had to laugh at some of the answers we’ve received on some pretty simple question.&lt;/p&gt;
&lt;p&gt;For example, in answer to “How do you create an object in JavaScript?”  One applicant responded, “I always use the WHERE keyword.”  What?!!! And that naturally got us all talking about good interview questions.  How can we tell that the applicant is even worth interviewing? The following questions are not meant to be THE interview.  The questions are meant to shorten the interview process by ensuring the applicant has a basic understanding of the language they will be expected to work with.&lt;/p&gt;
&lt;h2 id=&#34;C-Interview-Questions&#34;&gt;&lt;a href=&#34;#C-Interview-Questions&#34; class=&#34;headerlink&#34; title=&#34;C# Interview Questions&#34;&gt;&lt;/a&gt;C# Interview Questions&lt;/h2&gt;&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;h3 id=&#34;1-What-is-the-difference-between-an-Object-and-a-Class&#34;&gt;&lt;a href=&#34;#1-What-is-the-difference-between-an-Object-and-a-Class&#34; class=&#34;headerlink&#34; title=&#34;1. What is the difference between an Object and a Class?&#34;&gt;&lt;/a&gt;1. What is the difference between an Object and a Class?&lt;/h3&gt;&lt;p&gt;This is an object oriented 101 question.  So if you can’t answer this, I might try a few other questions for show, but you’ve probably already been counted out.  The way I always described the difference between the two is that the Class is like a cookie cutter and an Object is like the cookie.  The class defines what the object is going to do, but the object is the thing actually doing the work.&lt;/p&gt;
&lt;p&gt;A more technical answer would be that the Class defines the object while the Object is the Class active in memory.&lt;/p&gt;
&lt;h3 id=&#34;2-What-is-“Polymorphism”&#34;&gt;&lt;a href=&#34;#2-What-is-“Polymorphism”&#34; class=&#34;headerlink&#34; title=&#34;2. What is “Polymorphism”?&#34;&gt;&lt;/a&gt;2. What is “Polymorphism”?&lt;/h3&gt;&lt;p&gt;This is my first stab at making sure you understand the basics of object oriented programming.  Does your answer at least include the concept of virtual functions?  Here is how I explain polymorphism.&lt;/p&gt;
&lt;p&gt;Polymorphism gets at the idea that you can have a method in a parent class and a method with the same name in a child class.  If the method in the parent class should be marked virtual and the method in the child class should be marked “overrides.”  At runtime, the decision as to which one is called is based on the type of the object that the method is called from.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;//www.webopedia.com/TERM/P/polymorphism.html&#34;&gt;http://www.webopedia.com/TERM/P/polymorphism.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Some might want to include other concepts&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;//en.wikipedia.org/wiki/Polymorphism_(computer_science)&#34;&gt;https://en.wikipedia.org/wiki/Polymorphism_(computer_science)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;But historically, polymorphism has been limited to the basic idea of virtual functions and the applicant’s response should, at the very least, reflect this answer.&lt;/p&gt;
&lt;h3 id=&#34;3-What-is-the-difference-between-overload-overrides-and-shadows&#34;&gt;&lt;a href=&#34;#3-What-is-the-difference-between-overload-overrides-and-shadows&#34; class=&#34;headerlink&#34; title=&#34;3. What is the difference between overload, overrides, and shadows?&#34;&gt;&lt;/a&gt;3. What is the difference between overload, overrides, and shadows?&lt;/h3&gt;&lt;p&gt;Again, this is to get at your understanding of object oriented programming generally and the sometimes confusing keywords in the language.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Overloading gets at the concept that you can have multiple methods with the same name hanging off a given class as long as the methods all have a different signature (parameter types), the code is legal.&lt;/li&gt;
&lt;li&gt;Overrides is how polymorphism is implemented.&lt;/li&gt;
&lt;li&gt;Shadows flips polymorphism on it’s head.  If you mark a method as shadowed using the “new” keyword, then instead of the method getting called based on the object type, the method gets called based on the variable type that is holding the reference to the object.  So, given class A is a parent of class B and both have a method foo() and foo() is marked with the shadows keyword.  If you declare a variable of type A and point that variable to an object of type B, when you call foo off that object, A.foo() will be called.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-What-is-the-difference-between-the-keyword-“String”-and-the-keyword-“string”&#34;&gt;&lt;a href=&#34;#4-What-is-the-difference-between-the-keyword-“String”-and-the-keyword-“string”&#34; class=&#34;headerlink&#34; title=&#34;4. What is the difference between the keyword  “String” and the keyword “string”?&#34;&gt;&lt;/a&gt;4. What is the difference between the keyword  “String” and the keyword “string”?&lt;/h3&gt;&lt;p&gt;I work with some pretty sharp guys and even they stumbled on this one.  Do YOU know? When I was teaching C# for a training company, I would say, “The only difference is that ‘string’ turns blue in the editor.”  Of course now that you can configure the editor, that’s not really a good answer.  But you get the point.  Both keywords compile down to the same intermediate language.  Technically, “string” is an alias for “String”.  “String” is the proper class.&lt;/p&gt;
&lt;h3 id=&#34;5-What-is-“int”-an-alias-for&#34;&gt;&lt;a href=&#34;#5-What-is-“int”-an-alias-for&#34; class=&#34;headerlink&#34; title=&#34;5. What is “int” an alias for?&#34;&gt;&lt;/a&gt;5. What is “int” an alias for?&lt;/h3&gt;&lt;p&gt;Since we’ve already used the term alias by this point, I’m digging deep to find out just how much you know.  The proper answer is that “int” is an alias for the Int32 type.  I can forgive you if you say “class” but it really isn’t a class.  It is a type.&lt;/p&gt;
&lt;h3 id=&#34;6-What-is-the-difference-between-a-value-type-and-a-reference-type&#34;&gt;&lt;a href=&#34;#6-What-is-the-difference-between-a-value-type-and-a-reference-type&#34; class=&#34;headerlink&#34; title=&#34;6. What is the difference between a value type and a reference type?&#34;&gt;&lt;/a&gt;6. What is the difference between a value type and a reference type?&lt;/h3&gt;&lt;p&gt;Once again, I’m trying to find out how well you know what is going on.  Do you just hack at your code until it seems to work, or do you really understand what is happening under the hood? Again, when I was teaching this, the explanation always went something like this: The value of a value type occupies memory on the stack and when you do an assignment from one value type to another the data is copied from one memory location to the other.  Each variable is changed in isolation to the other.&lt;/p&gt;
&lt;p&gt;A reference type is a variable on the stack that points to memory in the heap that actually holds the value.  When you do an assignment from one reference type to another, only the pointer is copied.  In the end, both variables point to the same location on the heap.&lt;/p&gt;
&lt;p&gt;If you change the value of a reference type from one variable, the other variable is impacted with the change because it is the same location in memory you are changing.&lt;/p&gt;
&lt;p&gt;The key part of this answer is that the value of a value type occupies the memory the variable represents and that the value of a reference type is pointed to by the memory that the variable represents.  The stack vs heap issue is secondary and in fact gets clouded by the fact that once you put a value type in a reference type, either by boxing or by including it as a member of a class, the whole stack vs heap question gets quite murky.  But, using stack vs heap as a general way of discussing the main issue is a starting point at the very least.&lt;/p&gt;
&lt;h3 id=&#34;7-What-is-the-primary-factor-in-making-code-testable&#34;&gt;&lt;a href=&#34;#7-What-is-the-primary-factor-in-making-code-testable&#34; class=&#34;headerlink&#34; title=&#34;7. What is the primary factor in making code testable?&#34;&gt;&lt;/a&gt;7. What is the primary factor in making code testable?&lt;/h3&gt;&lt;p&gt;OK.  You knew I had to stick this one in here, right?  I doubt most programmers have given this much thought so it is OK if they have to spend some time thinking of the answer.&lt;/p&gt;
&lt;p&gt;What I’m hoping to hear is that dependencies make code untestable.&lt;/p&gt;
&lt;p&gt;Simplistic answer?  Maybe.  But the answer to this question, regardless of if it agrees with mine or not, will tell me if they’ve had any experience writing unit tests.&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://davembush.github.com/cracking-the-programmer-s-interview-code/</guid>
            <title>Cracking the Programmer&#39;s Interview Code</title>
            <link>http://davembush.github.com/cracking-the-programmer-s-interview-code/</link>
            <category>programming</category>
            <category>interview</category>
            <pubDate>Thu, 07 May 2015 06:00:00 -0400</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;img src=&#34;/uploads/2015/04/33Tr.png&#34; alt=&#34;33Tr&#34; title=&#34;33Tr&#34;&gt;&lt;/p&gt;
&lt;p&gt;Several comments this week contribute to this week’s post.&lt;/p&gt;
&lt;p&gt;The first, and the one that pushed me to write this post, is a discussion over at Simple Programmer on a post called “&lt;a href=&#34;//simpleprogrammer.com/2015/01/19/cracking-the-coding-interview/&#34;&gt;Cracking the Coding Interview&lt;/a&gt;” where I made the following statement,&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;blockquote&gt;
&lt;p&gt;Coding interview? Really? I wouldn’t bother. This is right up there with working 60 hour weeks for me. Yes, I know all the big companies do this, but it doesn’t make it right. “Just because you can, doesn’t mean you should.” I’ve been programming now for 27 years. I started with DOS 3.1 for anyone who’s trying to figure out when that was. I’ve NEVER had to do a coding interview and I make really good money so it isn’t that I’m working for minimum wage. Here’s the deal. I can tell in about 10 minutes if another programmer knows their stuff. I expect that any company worth working for (and yes that includes even Amazon, Google, Microsoft, and the other big boys) should have someone on their staff who can do the same. The best interview I’ve ever had is from the guy I currently work under. The question was, “I know nothing about JavaScript, tell me what I need to know.” And then he just shut up and let me talk. Every once in a while, he’s ask me to drill deeper on the topic. But it is the only interview in 27 years where I felt like the guy interviewing me really wanted to know what I knew. Most of the other tech interviews I’ve been on have been more of the interviewer telling me how much he knew (by asking impossible questions). Now, if I ever did run into an interview where they wanted me to write code on a whiteboard, I’d probably pseudo code it out and explain that I’m a huge fan of Intellisense, particularly ReSharper, and Google and that I rely heavily on those two to get the syntax right. If you want a guy who can write code in notepad, I’m probably not the guy you’re looking for. If you want a guy who can solve problems, who understands how to write testable code, write unit test, can mentor younger programmers, understands what it really means to be agile, and can say “no” to power when it is appropriate, then I’m the guy you want.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;  OK, I admit, that probably came off a little strong.  But the point is, I don’t see any value in coding tests.  And when I interview others, what a coding test would reveal isn’t what I want to know about the interviewee and isn’t what I want to be known for.&lt;/p&gt;
&lt;h2 id=&#34;Response&#34;&gt;&lt;a href=&#34;#Response&#34; class=&#34;headerlink&#34; title=&#34;Response&#34;&gt;&lt;/a&gt;Response&lt;/h2&gt;&lt;p&gt;That was weeks ago.  The comment was followed up yesterday by this response&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Why wouldn’t you want to have all the qualities of the latter and the ability to write code in notepad? Who says you have to be one or the other? It seems to me that most places would want to hire someone who could do both. In all my interviews, as a candidate, I’ve walked out having learned something new from a coding challenge. It’s a “free” opportunity to learn something new from someone who has different experiences and levels of understanding than I do. It’s also a good opportunity for me to recognize my knowledge gaps where I need to be stronger. Also, I think you missed out on one really critical component of white boarding code challenges. As someone who’s been on the asking questions side, I’m okay with the candidate not knowing the intricacies of array manipulation in JavaScript, but being able to have someone talk through a problem and ask questions and have a dialogue is a really important aspect for me. I really want to know how tenacious a candidate is at figuring out a problem. If they get an answer right away, we’ll move onto something else, but I want to know how willing they are to break through the wall when they don’t immediately know how to solve a problem. I also want to work with someone I enjoy solving problems with, who isn’t going to look down at their peers because they don’t have experience in time or if they have knowledge gaps. Coding challenges are an easy way to hash these things out. I’ve never made a life decision based on a 10 minute conversation and I’d hope no one would ever make a decision that could impact the next 3-5 years of my life based on a 10 minute conversation where a little extra time doing something that’s relevant and challenging could be more indicative of how I will do as a potential future team member.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;Recruiter-Says&#34;&gt;&lt;a href=&#34;#Recruiter-Says&#34; class=&#34;headerlink&#34; title=&#34;Recruiter Says&#34;&gt;&lt;/a&gt;Recruiter Says&lt;/h2&gt;&lt;p&gt;And then there was this offhand comment by a recruiter this week who told me, “You know what reason most hiring managers give for refusing candidates we send them is?  ‘They aren’t dynamic enough.’  What does that even mean?” And so rather than write a whole blog post as a blog comment, I respond here.&lt;/p&gt;
&lt;h2 id=&#34;Why-Not-Both&#34;&gt;&lt;a href=&#34;#Why-Not-Both&#34; class=&#34;headerlink&#34; title=&#34;Why Not Both?&#34;&gt;&lt;/a&gt;Why Not Both?&lt;/h2&gt;&lt;p&gt;First, let’s get at the first question the responder asked.  Why wouldn’t I want to have all the qualities of the later and the ability to write code in notepad? Well, it really isn’t a matter of either&amp;#x2F;or.  I think my method actually gets deeper faster.  The place I currently work interviews 10 people for every 1 we hire because most people (9 out of 10) can’t talk knowledgeably about anything they have on their resumes.&lt;/p&gt;
&lt;p&gt;Once we’ve established that they aren’t lying on their resume about their experience, we can be pretty sure they’ve actually written code.  A white board coding interview might be a way of getting at this information.  I just happen to think it is inefficient at best and puts undo stress on a candidate who may otherwise be exactly what you are looking for.  In fact, you’ll notice that the comment says that the whole point of the interview is to have an interaction.  I assure you this can be done by just having a conversation about code.&lt;/p&gt;
&lt;p&gt;Second, unless you state up front that you are only looking for pseudo code and how the candidate thinks, the candidate is going to stress over syntax.  Assuming that he gets it right, it doesn’t necessarily mean that he is an efficient coder.  It only means he’s memorized a lot of syntax and can use it.&lt;/p&gt;
&lt;p&gt;The final statement is where I want to spend most of my time though.  Sorry for so much “ink” to get to the main point, but I wanted to setup the context for you.&lt;/p&gt;
&lt;h2 id=&#34;Decisions-Based-On-10-Minute-Conversation&#34;&gt;&lt;a href=&#34;#Decisions-Based-On-10-Minute-Conversation&#34; class=&#34;headerlink&#34; title=&#34;Decisions Based On 10 Minute Conversation&#34;&gt;&lt;/a&gt;Decisions Based On 10 Minute Conversation&lt;/h2&gt;&lt;p&gt;He states, “I’ve never made a life decision based on a 10 minute conversation …” First, I never said that an interview should only be 10 minutes long.  If the Interview only lasted 10 minutes, that would be a bad sign too.  Although, I don’t think you’d find out anything more useful by taking more than 10 minutes.&lt;/p&gt;
&lt;p&gt;Current research suggest that, no matter which method we use, most of us are hired (or hire) or not within the first 30 seconds.&lt;/p&gt;
&lt;p&gt;The rest of the time we come up with supporting reasons.  The fact of the matter is, by the time you’ve reached the coding interview, the decision has already been made.  This is just a way to justify the decision.&lt;/p&gt;
&lt;p&gt;If you were to study the psychology of sales, you would find that all of us buy based on our emotions and come up with logical reasons why after we’ve already made the decision.  This is why sales literature is aimed at the emotions.  In some way saying, “If you buy this product, you will not have to worry anymore about X”.  Sales pages are constructed the way they are based on this.  I once created a fake sales page using the formula.&lt;/p&gt;
&lt;p&gt;As much as we’d like to think otherwise, we ALL do this.  (And watch the comments come in on that statement!  Bring ‘em on.) And so we come to the final question, what do we mean by “dynamic” and how did this impact the interview.&lt;/p&gt;
&lt;h2 id=&#34;What-Does-“Dynamic”-Mean&#34;&gt;&lt;a href=&#34;#What-Does-“Dynamic”-Mean&#34; class=&#34;headerlink&#34; title=&#34;What Does “Dynamic” Mean?&#34;&gt;&lt;/a&gt;What Does “Dynamic” Mean?&lt;/h2&gt;&lt;p&gt;Well, I’ll tell you.  It’s like this.&lt;/p&gt;
&lt;p&gt;This week I went to a meet-up for ASP.NET and JavaScript developers.  Every person there I talked to was passionate about programming.  It was the easiest group of people I’ve ever mingled with.  Why?  Because they all wanted to talk about code.  They all had opinions.  Some I even disagree with.  But assuming they could agree to the standards at my organization, I would have hired any one of them.  Why?  Because they were “dynamic.” One guy in particular I talked to for several hours.  I knew in the first 10 minutes that he knew what he was doing.  Several hours later, I found some areas we disagreed on.  I never had to look at any code.  The way he talked about coding told me that he could code.  The projects he talked about told me that he could solve problems.  And the fact that he could explain those problems he was solving to me showed me that he could communicate.&lt;/p&gt;
&lt;h2 id=&#34;Cracking-The-Programmer’s-Interview-Code&#34;&gt;&lt;a href=&#34;#Cracking-The-Programmer’s-Interview-Code&#34; class=&#34;headerlink&#34; title=&#34;Cracking The Programmer’s Interview Code&#34;&gt;&lt;/a&gt;Cracking The Programmer’s Interview Code&lt;/h2&gt;&lt;p&gt;And so, to the point of the title.  The way you “Crack the Programmer’s Interview Code” is to be passionate about what you do.  Unfortunately, you can’t fake that if you don’t have a clue about programming in the first place.  Yes, you can grease the skids a bit.  Dress up for the interview.  Don’t smell.  Don’t be a jerk.  Be confident but not arrogant.  Beyond that, winning at the interview may simply be a matter of fit.  You may have to do some sort of code interview.  Or you might decide to skip it because that’s an indication to you that this place won’t be a good fit for you.  And that’s OK.  There are plenty of places to work.  You don’t have to take the first job that pays. You’ll get bonus points if you can walk into the interview already knowing what the pain points are so you can address them.  If you know what they fear, what keeps them up at night, and can show how you are the one who can solve that pain point, you are half way to getting the job. None of these are guarantees.  You may not get the job and it may have nothing to do with you.  One of the things I’m realizing is that the way people react to me has at least as much to do with them as it does with me.  If the guy is having a bad day and&amp;#x2F;or you say or do something that reminds him of something he’s associated with a bad memory, there is no way for you to know that and probably nothing you could do about it if you did.&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
